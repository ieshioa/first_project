<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.todo.board.BoardMapper">

    <insert id="createBoard" keyProperty="boardId" useGeneratedKeys="true">
        INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (#{calendarId}, #{signedUserId}, #{title}, #{content}, #{startDay}, #{dDay}, #{deadLine})
    </insert>

    <insert id="createBoardFiles">
        INSERT INTO file (board_id, file_name)
        VALUES
        <foreach collection="fileNames" item="fileName" separator=",">
            (#{boardId}, #{fileName})
        </foreach>
    </insert>

    <insert id="createFile" keyProperty="fileId" useGeneratedKeys="true">
        INSERT INTO file
        (file_name, board_id)
        values
        (#{newName}, #{boardId})
    </insert>

    <select id="getBoardInfoByBoardId">
        SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = #{boardId}
    </select>

    <select id="getBoardInfoByBoardIdCalendarId">
        SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = #{boardId} AND calendar_id = #{calendarId}
    </select>

    <select id="getBoardByBoardIdAndCalendarId">
        SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = #{boardId}
    </select>

    <select id="getBoardViewListByUserId">
        <![CDATA[
        SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = #{userId} AND A.state = 1
        ORDER BY A.d_day ASC
        ]]>
    </select>

<!--    AND (-->
<!--    (A.start_day <= LAST_DAY(STR_TO_DATE(CONCAT(YEAR(CURDATE()), '-', #{month}, '-01'), '%Y-%m-%d'))-->
<!--    AND A.d_day >= STR_TO_DATE(CONCAT(YEAR(CURDATE()), '-', #{month}, '-01'), '%Y-%m-%d'))-->
<!--    )-->

    <select id="getBoardFiles">
        SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = #{boardId}
    </select>

    <select id="getBoardByBoardId">
        SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title, content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = #{boardId}
    </select>

    <select id="getBoardMiniByState">
        SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = #{userId} AND A.state = #{state}
    </select>

    <select id="getBoardSearchList">
        SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        <where>
            <if test="searchWord != null and searchWord != ''">
                C.user_id = #{signedUserId}
                AND
                (A.title LIKE '%${searchWord}%'
                OR
                A.content LIKE '%${searchWord}%')
            </if>
        </where>
        ORDER BY A.board_id DESC
    </select>

    <select id="selectBoardsByUserIdForToday">
        <![CDATA[
        SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = #{userId} AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
        ]]>
    </select>

    <update id="updateBoardState">
        UPDATE board
        SET state = #{state}
        WHERE board_id = #{boardId}
    </update>

    <select id="selectBoardsByUserIdForCurrentMonth">
        <![CDATA[
        SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = #{userId} AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
        ]]>
    </select>

    <select id="selectBoardsByUserIdForNextMonth">
        <![CDATA[
        SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = #{userId} AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
        ]]>
    </select>

    <update id="updateBoard">
        UPDATE board
        <set>
            <if test="title != null">
                title = #{title}
            </if>
            <if test="content != null">
                , content = #{content}
            </if>
            <if test="startDay != null">
                , start_day = #{startDay}
            </if>
            <if test="dDay != null">
                , d_day = #{dDay}
            </if>
            <if test="deadLine != null">
                , dead_line = #{deadLine}
            </if>
        </set>
        WHERE board_id = #{boardId}
    </update>

    <update id="updateBoardDnD">
        UPDATE board
        SET start_day = #{startDay}
            , d_day = #{dDay}
        WHERE board_id = #{boardId}
    </update>

    <delete id="deleteBoard">
        DELETE FROM board
        WHERE board_id = #{boardId}
    </delete>

    <delete id="deleteFile">
        DELETE FROM file
        WHERE file_id = #{fileId}
    </delete>

</mapper>
