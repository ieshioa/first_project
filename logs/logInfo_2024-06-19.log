[2024-06-19 09:31:48 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 09:31:48 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 09:31:48 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:48 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|------------|--------|-----------|-----------|
|notice_id |calendar_id |content |created_at |updated_at |
|----------|------------|--------|-----------|-----------|
|----------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:31:49 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:31:49 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:35:15 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:15 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:35:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:35:18 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT user_id
        FROM calendar
        WHERE calendar_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:18 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|1       |
|--------|
[0;39m
[2024-06-19 09:35:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:18 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|--------|-----------|-----------|
|notice_id |calendar_id |content |created_at |updated_at |
|----------|------------|--------|-----------|-----------|
|----------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:35:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:35:23 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:23 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:35:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|--------|-----------|-----------|
|notice_id |calendar_id |content |created_at |updated_at |
|----------|------------|--------|-----------|-----------|
|----------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:35:33 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:33 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:35:34 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 70 AND A.user_id != 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:34 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 09:35:34 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 70 AND A.user_id != 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:34 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT user_id AS userId, name
        FROM user
        WHERE email = 'ggg@ggg.net'
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----|
|user_id |name |
|--------|-----|
|31      |김밥천국 |
|--------|-----|
[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT title
        FROM calendar
        WHERE calendar_id = 70
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-------|
|title  |
|-------|
|캘린더 생성 |
|-------|
[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT name
        FROM user
        WHERE user_id = 31
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----|
|name |
|-----|
|김밥천국 |
|-----|
[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. INSERT INTO notice
        SET calendar_id = 70
            , content = '''김밥천국''님이 ''캘린더 생성''에 추가되었습니다.'
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
272. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 70
            , content = '''김밥천국''님이 ''캘린더 생성''에 추가되었습니다.'
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1191      |
|----------|
[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 70
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|72      |
|--------|
[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. INSERT INTO notice_list
        SET notice_id = 1191
        , user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. INSERT INTO notice
        SET calendar_id = 70
            , content = '''캘린더 생성'' 캘린더가 추가되었습니다.'
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
272. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 70
            , content = '''캘린더 생성'' 캘린더가 추가되었습니다.'
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1192      |
|----------|
[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. INSERT INTO notice_list
        SET notice_id = 1192
        , user_id = 31
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. INSERT INTO calendar_user
        (calendar_id, user_id)
        VALUES
        (70, 31)
 {executed in 0 msec}[0;39m
[2024-06-19 09:35:41 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 70 AND A.user_id != 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:41 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----|------------|
|user_id |name |email       |
|--------|-----|------------|
|31      |김밥천국 |ggg@ggg.net |
|--------|-----|------------|
[0;39m
[2024-06-19 09:35:41 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 70 AND A.user_id != 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:35:41 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----|------------|
|user_id |name |email       |
|--------|-----|------------|
|31      |김밥천국 |ggg@ggg.net |
|--------|-----|------------|
[0;39m
[2024-06-19 09:36:03 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:03 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:36:03 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:03 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:36:08 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:08 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:36:08 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:08 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:36:15 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:15 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:36:16 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:16 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:36:18 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:36:18 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:36:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:36:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:40:59 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:40:59 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:40:59 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:40:59 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:41:09 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:41:09 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:41:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:41:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:42:16 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:16 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:42:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:18 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:42:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:42:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:42:41 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:42:41 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:42:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:42:48 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:42:48 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:42:49 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:42:49 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:43:02 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:43:02 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:43:02 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:43:02 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:43:05 [32mINFO [0;39m http-nio-8080-exec-2] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 151 ms[0;39m
[2024-06-19 09:43:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:43:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:43:11 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:43:11 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:00 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:00 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:00 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:00 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:07 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:07 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:08 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:08 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:12 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:12 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:33 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:44:33 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:33 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:44:33 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:41 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:44:41 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:41 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:44:41 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:49 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:49 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:50 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:50 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:52 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:44:52 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:53 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:53 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:55 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:44:55 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:55 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:44:55 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:59 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:44:59 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:44:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:44:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:45:50 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 2 msec}[0;39m
[2024-06-19 09:45:50 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:45:50 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:45:50 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:01 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:04 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:04 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:05 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:05 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:13 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:46:13 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:14 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:46:14 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:33 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:33 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:33 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:33 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:48 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:48 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:48 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:48 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:46:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:46:56 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:46:56 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:48:03 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:48:03 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:48:03 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:48:03 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:52:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:52:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:52:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:52:01 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:52:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:52:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:52:01 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:52:01 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:55:30 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:30 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:55:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:31 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:55:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
271. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
274. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 09:55:56 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
272. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 09:55:56 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 09:55:59 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:59 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:55:59 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:55:59 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:56:29 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:56:29 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:56:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:56:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:56:32 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 09:56:32 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:56:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:56:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:56:35 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
274. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:56:35 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:56:35 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
273. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:56:35 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:57:24 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
276. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:57:24 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 09:57:24 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
276. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 09:57:24 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 10:19:40 [32mINFO [0;39m http-nio-8080-exec-10] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 140 ms[0;39m
[2024-06-19 10:30:42 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception[0;39m
java.io.FileNotFoundException: class path resource [static/index.html] cannot be resolved to URL because it does not exist
	at org.springframework.core.io.ClassPathResource.getURL(ClassPathResource.java:230)
	at org.springframework.core.io.AbstractFileResolvingResource.lastModified(AbstractFileResolvingResource.java:268)
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:598)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-06-19 10:30:44 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:44 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:30:44 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:44 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:30:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:30:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:45 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:30:45 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:30:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:30:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:30:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:30:46 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:46 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:30:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:30:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:30:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:30:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:30:46 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:30:46 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:30:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:30:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:31:03 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:03 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:31:06 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:06 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:31:19 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'jojo0614'
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:19 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|---------|-----|----|-------------------|
|user_id |id       |name |pwd |email              |
|--------|---------|-----|----|-------------------|
|110     |jojo0614 |조수현  |110 |jojo0614@gmail.com |
|--------|---------|-----|----|-------------------|
[0;39m
[2024-06-19 10:31:24 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:24 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:31:24 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:24 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:31:25 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:31:25 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 1 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|----------------------------|--------------------|-----------|
|notice_id |calendar_id |content                     |created_at          |updated_at |
|----------|------------|----------------------------|--------------------|-----------|
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다. |2024-06-19 09:35:40 |null       |
|----------|------------|----------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:40:23 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:40:23 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:40:24 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:40:24 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:40:25 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:25 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 10:40:25 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 10:40:25 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 10:41:14 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'test1234'
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:14 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|---------|-------|-------------------------------------------------------------|---------------|
|user_id |id       |name   |pwd                                                          |email          |
|--------|---------|-------|-------------------------------------------------------------|---------------|
|8       |test1234 |백창현 미워 |$2a$10$DPdMoBtxgr/rRJiEA6E3RO7HhdUkfzt9GbsE5nmqyV6kPhcukRMwm |test@naver.com |
|--------|---------|-------|-------------------------------------------------------------|---------------|
[0;39m
[2024-06-19 10:41:14 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:14 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:14 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:41:14 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:41:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:14 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:14 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:41:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:15 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:15 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:41:15 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:15 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:15 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:15 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:27 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:27 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 10:41:27 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:27 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:32 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:32 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 10:41:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 10:41:43 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:43 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:44 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:44 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:45 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 2 AND A.user_id != 2
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:45 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|------------------|
|user_id |name   |email             |
|--------|-------|------------------|
|1       |백창현    |qwer              |
|8       |백창현 미워 |test@naver.com    |
|30      |       |gogogo@gogogo.net |
|31      |김밥천국   |ggg@ggg.net       |
|--------|-------|------------------|
[0;39m
[2024-06-19 10:41:46 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 2 AND A.user_id != 2
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:46 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|------------------|
|user_id |name   |email             |
|--------|-------|------------------|
|1       |백창현    |qwer              |
|8       |백창현 미워 |test@naver.com    |
|30      |       |gogogo@gogogo.net |
|31      |김밥천국   |ggg@ggg.net       |
|--------|-------|------------------|
[0;39m
[2024-06-19 10:41:56 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:56 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:56 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:56 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:41:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:56 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:56 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:56 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:41:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:56 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:41:56 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:56 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:56 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:56 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:57 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:57 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:41:57 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:57 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:57 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:57 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:41:57 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:41:57 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:41:58 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:58 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 10:41:58 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 10:41:58 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 10:42:18 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:18 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:42:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:42:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:42:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:42:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO comment
        SET board_id = 213
            , user_id = 8
            , content = '이거 빨리 해야해요~'
 {executed in 3 msec}[0;39m
[2024-06-19 10:42:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
291. getGeneratedKeys on query: INSERT INTO comment
        SET board_id = 213
            , user_id = 8
            , content = '이거 빨리 해야해요~'
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:43 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|78        |
|----------|
[0;39m
[2024-06-19 10:42:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT title
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:43 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|
|title     |
|----------|
|2번 캘린더 보드 |
|----------|
[0;39m
[2024-06-19 10:42:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice
        SET calendar_id = 1
            , content = '''2번 캘린더 보드''에 새로운 댓글이 있습니다. : ''이거 빨리 해야해요~'''
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
291. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 1
            , content = '''2번 캘린더 보드''에 새로운 댓글이 있습니다. : ''이거 빨리 해야해요~'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:43 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1193      |
|----------|
[0;39m
[2024-06-19 10:42:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:43 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|8       |
|31      |
|72      |
|--------|
[0;39m
[2024-06-19 10:42:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice_list
        SET notice_id = 1193
        , user_id = 31
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice_list
        SET notice_id = 1193
        , user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:44 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:44 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. INSERT INTO comment
        SET board_id = 213
            , user_id = 8
            , content = '창현이 미워하지마~'
 {executed in 3 msec}[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
293. getGeneratedKeys on query: INSERT INTO comment
        SET board_id = 213
            , user_id = 8
            , content = '창현이 미워하지마~'
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|79        |
|----------|
[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT title
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|title     |
|----------|
|2번 캘린더 보드 |
|----------|
[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. INSERT INTO notice
        SET calendar_id = 1
            , content = '''2번 캘린더 보드''에 새로운 댓글이 있습니다. : ''창현이 미워하지마~'''
 {executed in 2 msec}[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
293. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 1
            , content = '''2번 캘린더 보드''에 새로운 댓글이 있습니다. : ''창현이 미워하지마~'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1194      |
|----------|
[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|8       |
|31      |
|72      |
|--------|
[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. INSERT INTO notice_list
        SET notice_id = 1194
        , user_id = 31
 {executed in 2 msec}[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. INSERT INTO notice_list
        SET notice_id = 1194
        , user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:49 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:49 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:42:59 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:59 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:42:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:42:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:42:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:42:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:42:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:44:00 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:44:00 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:00 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:44:00 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:01 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:01 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:14 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:14 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:19 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:19 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:19 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:29 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:29 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:44:30 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:30 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:30 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:30 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:30 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:30 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:44:30 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:30 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:44:36 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 2 AND A.user_id != 2
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:36 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|------------------|
|user_id |name   |email             |
|--------|-------|------------------|
|1       |백창현    |qwer              |
|8       |백창현 미워 |test@naver.com    |
|30      |       |gogogo@gogogo.net |
|31      |김밥천국   |ggg@ggg.net       |
|--------|-------|------------------|
[0;39m
[2024-06-19 10:44:36 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 2 AND A.user_id != 2
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:36 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|------------------|
|user_id |name   |email             |
|--------|-------|------------------|
|1       |백창현    |qwer              |
|8       |백창현 미워 |test@naver.com    |
|30      |       |gogogo@gogogo.net |
|31      |김밥천국   |ggg@ggg.net       |
|--------|-------|------------------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:44:40 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:40 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:44:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:44:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:44:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:44:41 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:41 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 10:44:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:44:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 10:45:01 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:45:01 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:45:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:45:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:45:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:45:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:45:48 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 2 AND A.user_id != 2
 {executed in 0 msec}[0;39m
[2024-06-19 10:45:48 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|------------------|
|user_id |name   |email             |
|--------|-------|------------------|
|1       |백창현    |qwer              |
|8       |백창현 미워 |test@naver.com    |
|30      |       |gogogo@gogogo.net |
|31      |김밥천국   |ggg@ggg.net       |
|--------|-------|------------------|
[0;39m
[2024-06-19 10:45:48 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 2 AND A.user_id != 2
 {executed in 0 msec}[0;39m
[2024-06-19 10:45:48 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-------|------------------|
|user_id |name   |email             |
|--------|-------|------------------|
|1       |백창현    |qwer              |
|8       |백창현 미워 |test@naver.com    |
|30      |       |gogogo@gogogo.net |
|31      |김밥천국   |ggg@ggg.net       |
|--------|-------|------------------|
[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:45:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:45:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:00 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:46:00 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:46:39 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:39 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:46:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:46:39 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:46:39 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:46:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:46:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:46:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:39 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:39 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:46:40 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:40 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:46:40 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:40 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:40 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:40 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:53 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:53 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:46:58 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:46:58 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:12 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:12 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 2 AND A.user_id != 2
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|------------------|
|user_id |name   |email             |
|--------|-------|------------------|
|1       |백창현    |qwer              |
|8       |백창현 미워 |test@naver.com    |
|30      |       |gogogo@gogogo.net |
|31      |김밥천국   |ggg@ggg.net       |
|--------|-------|------------------|
[0;39m
[2024-06-19 10:47:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 2 AND A.user_id != 2
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|------------------|
|user_id |name   |email             |
|--------|-------|------------------|
|1       |백창현    |qwer              |
|8       |백창현 미워 |test@naver.com    |
|30      |       |gogogo@gogogo.net |
|31      |김밥천국   |ggg@ggg.net       |
|--------|-------|------------------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:37 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:37 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 10:47:38 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:38 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 10:47:43 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:43 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|1182      |2           |'백창현'님이 'A팀 캘린더'에 추가되었습니다.         |2024-06-18 17:51:46 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:44 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:44 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 10:47:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----|------|
|user_id |name |email |
|--------|-----|------|
|--------|-----|------|
[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:47:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:47:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:05 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:05 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name |title        |color   |created_at          |updated_at          |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
|1           |1       |백창현  |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현  |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현  |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현  |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|------------|--------|-----|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:07 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:07 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT user_id AS userId, name
        FROM user
        WHERE email = 'tngus@naver.com'
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----|
|user_id |name |
|--------|-----|
|72      |조수현  |
|--------|-----|
[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT title
        FROM calendar
        WHERE calendar_id = 71
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|
|title    |
|---------|
|새로만든 캘린더 |
|---------|
[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT name
        FROM user
        WHERE user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:14 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----|
|name |
|-----|
|조수현  |
|-----|
[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice
        SET calendar_id = 71
            , content = '''조수현''님이 ''새로만든 캘린더''에 추가되었습니다.'
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
291. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 71
            , content = '''조수현''님이 ''새로만든 캘린더''에 추가되었습니다.'
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1195      |
|----------|
[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 71
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|8       |
|--------|
[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice_list
        SET notice_id = 1195
        , user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice
        SET calendar_id = 71
            , content = '''새로만든 캘린더'' 캘린더가 추가되었습니다.'
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
291. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 71
            , content = '''새로만든 캘린더'' 캘린더가 추가되었습니다.'
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1196      |
|----------|
[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice_list
        SET notice_id = 1196
        , user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO calendar_user
        (calendar_id, user_id)
        VALUES
        (71, 72)
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:14 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-----|----------------|
|user_id |name |email           |
|--------|-----|----------------|
|72      |조수현  |tngus@naver.com |
|--------|-----|----------------|
[0;39m
[2024-06-19 10:48:14 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:14 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----|----------------|
|user_id |name |email           |
|--------|-----|----------------|
|72      |조수현  |tngus@naver.com |
|--------|-----|----------------|
[0;39m
[2024-06-19 10:48:19 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:19 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:25 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:25 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-----|----------------|
|user_id |name |email           |
|--------|-----|----------------|
|72      |조수현  |tngus@naver.com |
|--------|-----|----------------|
[0;39m
[2024-06-19 10:48:25 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:25 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----|----------------|
|user_id |name |email           |
|--------|-----|----------------|
|72      |조수현  |tngus@naver.com |
|--------|-----|----------------|
[0;39m
[2024-06-19 10:48:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 215
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:48:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 215
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:33 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|215      |1           |72      |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |1     |2024-06-18 |2024-06-19 |00:00:00  |2024-06-18 15:26:37 |null       |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:48:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 215
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:33 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:48:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 215
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:33 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:48:36 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:36 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:39 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:39 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:40 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:40 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----|----------------|
|user_id |name |email           |
|--------|-----|----------------|
|72      |조수현  |tngus@naver.com |
|--------|-----|----------------|
[0;39m
[2024-06-19 10:48:40 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:40 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|----------------|
|user_id |name |email           |
|--------|-----|----------------|
|72      |조수현  |tngus@naver.com |
|--------|-----|----------------|
[0;39m
[2024-06-19 10:48:41 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:41 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:42 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:42 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:46 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:46 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:48:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:48:46 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:48:46 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:46 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:46 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:48:46 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:46 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:46 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:46 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:48:46 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:46 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:48:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:48:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:48:47 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:48:47 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:04 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'test1234'
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:04 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|---------|-------|-------------------------------------------------------------|---------------|
|user_id |id       |name   |pwd                                                          |email          |
|--------|---------|-------|-------------------------------------------------------------|---------------|
|8       |test1234 |백창현 미워 |$2a$10$DPdMoBtxgr/rRJiEA6E3RO7HhdUkfzt9GbsE5nmqyV6kPhcukRMwm |test@naver.com |
|--------|---------|-------|-------------------------------------------------------------|---------------|
[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|------------|-----------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                            |created_at          |updated_at |
|----------|------------|-----------------------------------|--------------------|-----------|
|1195      |71          |'조수현'님이 '새로만든 캘린더'에 추가되었습니다.       |2024-06-19 10:48:14 |null       |
|1189      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:55:22 |null       |
|1187      |71          |'김밥천국'님이 '새로만든 캘린더'에 추가되었습니다.      |2024-06-18 20:53:58 |null       |
|1186      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용33'   |2024-06-18 17:54:28 |null       |
|1185      |2           |'일정1'에 새로운 댓글이 있습니다. : '댓글 내용'     |2024-06-18 17:52:34 |null       |
|1184      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1' |2024-06-18 17:52:21 |null       |
|----------|------------|-----------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:49:05 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:05 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:07 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:07 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 10:49:08 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:08 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:49:08 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:08 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:49:08 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:08 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:49:09 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:09 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:49:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:14 [31mERROR[0;39m http-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception[0;39m
java.io.FileNotFoundException: class path resource [static/index.html] cannot be resolved to URL because it does not exist
	at org.springframework.core.io.ClassPathResource.getURL(ClassPathResource.java:230)
	at org.springframework.core.io.AbstractFileResolvingResource.lastModified(AbstractFileResolvingResource.java:268)
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:598)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-06-19 10:49:14 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:14 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:15 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:49:15 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:49:28 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=8, title=새로만든캘린더, content=새로만든캘린더, startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 10:49:28 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:49:28 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:50:02 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:02 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:50:06 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:06 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:50:12 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:50:33 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=8, title=ㅁㄹㄴㅇ, content=ㅁㅇㄹㄴ, startDay=2024-06-20, dDay=2024-06-21, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 8, 'ㅁㄹㄴㅇ', 'ㅁㅇㄹㄴ', '2024-06-20', '2024-06-21', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
291. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 8, 'ㅁㄹㄴㅇ', 'ㅁㅇㄹㄴ', '2024-06-20', '2024-06-21', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:33 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|223       |
|----------|
[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT title
        FROM calendar
        WHERE calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:33 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------------|
|title        |
|-------------|
|title(2차 수정) |
|-------------|
[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''ㅁㄹㄴㅇ'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
291. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''ㅁㄹㄴㅇ'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:33 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1197      |
|----------|
[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:33 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|8       |
|31      |
|72      |
|--------|
[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice_list
        SET notice_id = 1197
        , user_id = 31
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice_list
        SET notice_id = 1197
        , user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:33 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:33 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:50:34 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 223
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:34 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:50:35 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 223
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:35 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|223      |1           |8       |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |1     |2024-06-20 |2024-06-21 |00:00:00  |2024-06-19 10:50:33 |null       |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:50:35 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 223
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:35 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:50:35 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 223
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:35 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:50:39 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:39 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:50:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:50:51 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 223
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:51 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|223      |1           |8       |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |1     |2024-06-20 |2024-06-21 |00:00:00  |2024-06-19 10:50:33 |null       |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:50:51 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 223
 {executed in 0 msec}[0;39m
[2024-06-19 10:50:51 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:50:51 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 223
 {executed in 1 msec}[0;39m
[2024-06-19 10:50:51 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:51:32 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:51:33 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:51:33 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|223      |1           |#339AF0 |ㅁㄹㄴㅇ  |2024-06-21 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|223      |1           |#339AF0 |ㅁㄹㄴㅇ  |2024-06-21 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:52:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:52:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:52:12 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:52:12 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|223      |1           |#339AF0 |ㅁㄹㄴㅇ  |2024-06-21 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|223      |1           |#339AF0 |ㅁㄹㄴㅇ  |2024-06-21 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:53:05 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:53:05 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:54:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:54:14 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:14 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 10:54:14 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:14 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |color   |title |content |start_day  |d_day      |
|---------|------------|--------|------|--------|-----------|-----------|
|10       |1           |#339AF0 |title |content |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|223      |1           |#339AF0 |ㅁㄹㄴㅇ  |2024-06-21 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|223      |1           |#339AF0 |ㅁㄹㄴㅇ  |2024-06-21 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 10:54:15 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:15 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 10:54:19 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=이미지업로드 테스트, content=여기에서 이미지 일반 업로드를 테스트 합니다., startDay=2024-06-20, dDay=2024-06-28, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, '이미지업로드 테스트', '여기에서 이미지 일반 업로드를 테스트 합니다.', '2024-06-20', '2024-06-28', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
291. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, '이미지업로드 테스트', '여기에서 이미지 일반 업로드를 테스트 합니다.', '2024-06-20', '2024-06-28', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:19 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|224       |
|----------|
[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT title
        FROM calendar
        WHERE calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:19 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-------------|
|title        |
|-------------|
|title(2차 수정) |
|-------------|
[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''이미지업로드 테스트'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
291. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''이미지업로드 테스트'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:19 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1198      |
|----------|
[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:19 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|8       |
|31      |
|72      |
|--------|
[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice_list
        SET notice_id = 1198
        , user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. INSERT INTO notice_list
        SET notice_id = 1198
        , user_id = 31
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:19 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:19 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:54:23 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:23 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:54:24 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:24 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:54:24 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:24 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:54:24 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
291. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:24 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:54:50 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:50 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:54:50 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:50 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:54:50 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:50 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:54:50 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:50 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:54:52 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:52 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:54:52 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:52 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:54:52 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 10:54:52 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:54:52 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
292. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 10:54:52 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:55:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 10:55:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:55:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 10:55:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:55:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 10:55:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:55:28 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:55:28 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:55:37 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
293. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 10:55:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 10:55:37 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:55:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:55:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 10:55:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:55:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
294. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 10:55:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 10:56:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=다시 이미지업로드, content=다시 이미지업로드, startDay=2024-06-20, dDay=2024-06-27, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
296. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, '다시 이미지업로드', '다시 이미지업로드', '2024-06-20', '2024-06-27', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
296. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, '다시 이미지업로드', '다시 이미지업로드', '2024-06-20', '2024-06-27', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:56:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|225       |
|----------|
[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
296. SELECT title
        FROM calendar
        WHERE calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:56:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-------------|
|title        |
|-------------|
|title(2차 수정) |
|-------------|
[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
296. INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''다시 이미지업로드'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
296. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''다시 이미지업로드'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:56:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1199      |
|----------|
[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
296. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 10:56:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|8       |
|31      |
|72      |
|--------|
[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
296. INSERT INTO notice_list
        SET notice_id = 1199
        , user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
296. INSERT INTO notice_list
        SET notice_id = 1199
        , user_id = 31
 {executed in 0 msec}[0;39m
[2024-06-19 10:56:41 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
296. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:56:41 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:58:31 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=ㅎㅎㅎ, content=ㅎㅎㅎ, startDay=2024-06-14, dDay=2024-06-18, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'ㅎㅎㅎ', 'ㅎㅎㅎ', '2024-06-14', '2024-06-18', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
301. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'ㅎㅎㅎ', 'ㅎㅎㅎ', '2024-06-14', '2024-06-18', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:58:31 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|226       |
|----------|
[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT title
        FROM calendar
        WHERE calendar_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 10:58:31 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-------------|
|title        |
|-------------|
|title(2차 수정) |
|-------------|
[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''ㅎㅎㅎ'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
301. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''ㅎㅎㅎ'''
 {executed in 0 msec}[0;39m
[2024-06-19 10:58:31 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1200      |
|----------|
[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 10:58:31 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|8       |
|31      |
|72      |
|--------|
[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO notice_list
        SET notice_id = 1200
        , user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO notice_list
        SET notice_id = 1200
        , user_id = 31
 {executed in 0 msec}[0;39m
[2024-06-19 10:58:31 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 10:58:31 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:59:41 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=ㅎㅎ, content=ㅎㅎ, startDay=2024-06-13, dDay=2024-06-13, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 10:59:41 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'ㅎㅎ', 'ㅎㅎ', '2024-06-13', '2024-06-13', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:59:41 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
301. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'ㅎㅎ', 'ㅎㅎ', '2024-06-13', '2024-06-13', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 10:59:41 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|227       |
|----------|
[0;39m
[2024-06-19 10:59:41 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 10:59:41 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 10:59:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 226
        ORDER BY comment_id
 {executed in 2 msec}[0;39m
[2024-06-19 10:59:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 10:59:57 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 226
 {executed in 0 msec}[0;39m
[2024-06-19 10:59:57 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|226      |1           |72      |ㅎㅎㅎ   |ㅎㅎㅎ     |1     |2024-06-14 |2024-06-18 |00:00:00  |2024-06-19 10:58:31 |null       |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 10:59:57 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 226
 {executed in 1 msec}[0;39m
[2024-06-19 10:59:57 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 10:59:57 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 226
 {executed in 0 msec}[0;39m
[2024-06-19 10:59:57 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:00:01 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:00:01 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:01:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=ㅇㅇ, content=ㅇㅇ, startDay=2024-06-19, dDay=2024-06-20, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:01:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'ㅇㅇ', 'ㅇㅇ', '2024-06-19', '2024-06-20', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:01:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
301. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'ㅇㅇ', 'ㅇㅇ', '2024-06-19', '2024-06-20', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:01:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|228       |
|----------|
[0;39m
[2024-06-19 11:01:12 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:01:12 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:02:36 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:02:36 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:03:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=tt, content=ttt, startDay=2024-06-26, dDay=2024-06-28, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:03:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'tt', 'ttt', '2024-06-26', '2024-06-28', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:03:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
301. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'tt', 'ttt', '2024-06-26', '2024-06-28', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:03:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|229       |
|----------|
[0;39m
[2024-06-19 11:03:04 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:03:04 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:03:25 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:03:25 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:03:44 [32mINFO [0;39m http-nio-8080-exec-10] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 146 ms[0;39m
[2024-06-19 11:05:12 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:05:12 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:05:24 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:05:24 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:06:00 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:06:00 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=tt, content=ttt, startDay=2024-06-26, dDay=2024-06-28, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'tt', 'ttt', '2024-06-26', '2024-06-28', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:06:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
301. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'tt', 'ttt', '2024-06-26', '2024-06-28', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:06:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|230       |
|----------|
[0;39m
[2024-06-19 11:07:17 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:07:17 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:07:23 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%.%'
                OR
                A.content LIKE '%.%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:07:23 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|206      |1           |title(2차 수정) |#339AF0 |일정 2       |일정 2 입니다.                 |2024-06-27 |2024-06-27 |3     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 11:07:26 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅇㅁㅇㄻㄴㅇㄻㄴㄹ%'
                OR
                A.content LIKE '%ㅇㅁㅇㄻㄴㅇㄻㄴㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:07:26 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:07:47 [31mERROR[0;39m http-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.multipart.MultipartException: Failed to parse multipart servlet request] with root cause[0;39m
org.apache.tomcat.util.http.fileupload.impl.InvalidContentTypeException: the request doesn't contain a multipart/form-data or multipart/mixed stream, content type header is application/json
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.init(FileItemIteratorImpl.java:151)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.getMultiPartStream(FileItemIteratorImpl.java:205)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.findNextItem(FileItemIteratorImpl.java:224)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.<init>(FileItemIteratorImpl.java:142)
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.getItemIterator(FileUploadBase.java:252)
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:276)
	at org.apache.catalina.connector.Request.parseParts(Request.java:2784)
	at org.apache.catalina.connector.Request.getParts(Request.java:2685)
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:773)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:93)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:86)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:70)
	at org.springframework.web.multipart.support.MultipartResolutionDelegate.asMultipartHttpServletRequest(MultipartResolutionDelegate.java:82)
	at org.springframework.web.multipart.support.RequestPartServletServerHttpRequest.<init>(RequestPartServletServerHttpRequest.java:68)
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:140)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-06-19 11:07:47 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=2, signedUserId=31, title=일정1, content=content, startDay=2024-06-12, dDay=2024-06-18, deadLine=12:30:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:07:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
301. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (2, 31, '일정1', 'content', '2024-06-12', '2024-06-18', '12:30:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:07:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
301. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (2, 31, '일정1', 'content', '2024-06-12', '2024-06-18', '12:30:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:07:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|231       |
|----------|
[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 9 class path changes (0 additions, 0 deletions, 9 modifications)[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 18324 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 360 ms[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@491fa2d7[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 11:08:47 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
311. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 11:08:47 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 11:08:47 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 11:08:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 11:08:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 11:08:48 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 11:08:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 11:08:48 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 1.005 seconds (process running for 54024.401)[0;39m
[2024-06-19 11:08:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 11:09:21 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 11:09:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-06-19 11:09:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-06-19 11:09:23 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 11632 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 11:09:23 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 11:09:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-06-19 11:09:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1360 ms[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@97c7b6d[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 11:09:24 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-06-19 11:09:25 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 11:09:25 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 11:09:25 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:25 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 11:09:25 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 11:09:25 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 11:09:26 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 11:09:26 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 11:09:26 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 11:09:26 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 11:09:26 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 3.698 seconds (process running for 4.155)[0;39m
[2024-06-19 11:09:27 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.148] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-06-19 11:09:27 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.148] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-06-19 11:09:27 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.148] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-06-19 11:09:29 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=2, signedUserId=31, title=일정1, content=content, startDay=2024-06-12, dDay=2024-06-18, deadLine=12:30:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (2, 31, '일정1', 'content', '2024-06-12', '2024-06-18', '12:30:00')
 {executed in 1 msec}[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (2, 31, '일정1', 'content', '2024-06-12', '2024-06-18', '12:30:00')
 {executed in 1 msec}[0;39m
[2024-06-19 11:09:29 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|232       |
|----------|
[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO file (board_id, file_name)
        VALUES

            (232, '0efaca4b-885a-40ba-9f12-e674b3f63f50.jpg')
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT title
        FROM calendar
        WHERE calendar_id = 2
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:29 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-------|
|title  |
|-------|
|A팀 캘린더 |
|-------|
[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO notice
        SET calendar_id = 2
            , content = '''A팀 캘린더''에 새로운 일정이 등록되었습니다. : ''일정1'''
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 2
            , content = '''A팀 캘린더''에 새로운 일정이 등록되었습니다. : ''일정1'''
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:29 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1201      |
|----------|
[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 2
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:29 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|1       |
|2       |
|8       |
|30      |
|31      |
|--------|
[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO notice_list
        SET notice_id = 1201
        , user_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO notice_list
        SET notice_id = 1201
        , user_id = 2
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO notice_list
        SET notice_id = 1201
        , user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 11:09:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO notice_list
        SET notice_id = 1201
        , user_id = 30
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=gogo, content=gogogogo, startDay=2024-06-19, dDay=2024-06-21, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'gogo', 'gogogogo', '2024-06-19', '2024-06-21', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO board
        (calendar_id, user_id, title, content, start_day, d_day, dead_line)
        VALUES
        (1, 72, 'gogo', 'gogogogo', '2024-06-19', '2024-06-21', '00:00:00')
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|233       |
|----------|
[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO file (board_id, file_name)
        VALUES

            (233, 'fa31a1a8-5e30-4100-97bd-6fcc276f286f.png')
         , 
            (233, '3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png')
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT title
        FROM calendar
        WHERE calendar_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-------------|
|title        |
|-------------|
|title(2차 수정) |
|-------------|
[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''gogo'''
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO notice
        SET calendar_id = 1
            , content = '''title(2차 수정)''에 새로운 일정이 등록되었습니다. : ''gogo'''
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|1202      |
|----------|
[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id
        FROM calendar_user
        WHERE calendar_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|8       |
|31      |
|72      |
|--------|
[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO notice_list
        SET notice_id = 1202
        , user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO notice_list
        SET notice_id = 1202
        , user_id = 31
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:11 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:10:11 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:10:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 233
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 11:10:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:10:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:10:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:10:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:10:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:10:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:11:14 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:11:14 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:11:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:11:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:11:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:11:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:11:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 11:11:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 11:11:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 0 msec}[0;39m
[2024-06-19 11:11:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 11:11:39 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:11:39 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:11:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:11:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:12:28 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:12:28 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 233
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 11:12:28 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:12:28 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:12:28 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:12:28 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:12:28 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:12:28 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:13:47 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:13:48 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:14:53 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:14:53 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:15:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:15:18 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄻㄴㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄻㄴㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:16:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:16:46 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id
        FROM user
        WHERE email = 'jojo0614@gmail.com' AND name = '조수현'
 {executed in 0 msec}[0;39m
[2024-06-19 11:16:46 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|
|id       |
|---------|
|jojo0614 |
|---------|
[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 9 class path changes (0 additions, 0 deletions, 9 modifications)[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 11632 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 444 ms[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5cd71f7b[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 11:16:53 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 11:16:53 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 11:16:54 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 11:16:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 11:16:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 11:16:54 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 11:16:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 11:16:54 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 1.259 seconds (process running for 452.196)[0;39m
[2024-06-19 11:16:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 11:16:55 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-06-19 11:16:55 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-06-19 11:16:55 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-06-19 11:16:55 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 233
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 11:16:55 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:16:55 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:16:55 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:16:55 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:16:55 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:16:55 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:16:55 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:17:07 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id
        FROM user
         WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 11:17:07 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|72      |
|--------|
[0;39m
[2024-06-19 11:17:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄻㄴㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄻㄴㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:17:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:17:17 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㅁㅁㅁㅁㄴㅇㄻㄹ%'
                OR
                A.content LIKE '%ㅁㅁㅁㅁㅁㄴㅇㄻㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:17:17 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:17:58 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:17:58 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:17:58 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:17:58 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:17:58 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:17:58 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:18:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㅁㅁㅁㅁㄴㅇㄻㄹ%'
                OR
                A.content LIKE '%ㅁㅁㅁㅁㅁㄴㅇㄻㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:18:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:18:17 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 11:18:17 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 11:18:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:18:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:18:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:18:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:18:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:18:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:18:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:18:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:18:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:18:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:18:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:18:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:19:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㅁㅁㅁㅁㄴㅇㄻㄹ%'
                OR
                A.content LIKE '%ㅁㅁㅁㅁㅁㄴㅇㄻㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:19:01 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㅇㄻㄴㅇㄻㄴㅇㄻㄴㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㅇㄻㄴㅇㄻㄴㅇㄻㄴㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:01 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:19:02 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:19:02 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:19:04 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄹㄴㅁㅇㄹㄴㅁㅇㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄹㄴㅁㅇㄹㄴㅁㅇㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:04 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 233
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:19 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:19 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:19 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:19 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:19:27 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄹㄴㅁㅇㄹㄴㅁㅇㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄹㄴㅁㅇㄹㄴㅁㅇㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:27 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:19:30 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㄻㄴㄻㄴㅇㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㄻㄴㄻㄴㅇㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:30 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:19:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:19:34 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:34 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:19:36 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹㅇㅁㄴㄻㅇㄴㄹㄴㅁㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹㅇㅁㄴㄻㅇㄴㄹㄴㅁㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:36 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:19:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:19:48 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 233
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:48 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:19:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:19:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:19:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:19:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:19:55 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:19:55 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:20:02 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:02 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:20:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%모르%'
                OR
                A.content LIKE '%모르%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:20:08 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%모%'
                OR
                A.content LIKE '%모%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:08 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:20:09 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:20:09 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:20:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:20:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:20:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE board
        SET state = 2
        WHERE board_id = 211
 {executed in 2 msec}[0;39m
[2024-06-19 11:20:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |2     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:20:16 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. UPDATE board
        SET state = 1
        WHERE board_id = 211
 {executed in 2 msec}[0;39m
[2024-06-19 11:20:17 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:20:17 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:20:18 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE board
        SET state = 2
        WHERE board_id = 211
 {executed in 3 msec}[0;39m
[2024-06-19 11:20:18 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:18 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |2     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:20:19 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:19 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:20:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE board
        SET state = 3
        WHERE board_id = 211
 {executed in 3 msec}[0;39m
[2024-06-19 11:20:22 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 11:20:22 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:20:24 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:24 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |3     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:20:27 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE board
        SET state = 1
        WHERE board_id = 211
 {executed in 3 msec}[0;39m
[2024-06-19 11:20:27 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:27 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:20:56 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹㄴㅁㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹㄴㅁㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:20:56 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:21:09 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:21:09 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:21:09 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:21:09 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:21:09 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:21:09 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:21:23 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:21:23 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:21:23 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:21:23 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:21:23 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 0 msec}[0;39m
[2024-06-19 11:21:23 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:21:27 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹㄴㅁㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹㄴㅁㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:21:27 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:21:27 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:21:27 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:21:29 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㅁ%'
                OR
                A.content LIKE '%ㅁㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:21:29 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:21:30 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:21:30 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:21:32 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:21:32 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:21:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:21:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:22:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:22:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:22:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:22:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:22:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:22:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:22:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:22:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content  |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
|233      |1           |72      |gogo  |gogogogo |1     |2024-06-19 |2024-06-21 |00:00:00  |2024-06-19 11:10:11 |null       |
|---------|------------|--------|------|---------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:22:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:22:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----------------------------------------|
|file_id |file_name                                |
|--------|-----------------------------------------|
|30      |fa31a1a8-5e30-4100-97bd-6fcc276f286f.png |
|31      |3c61f688-c74f-4df5-84d4-a6bfdfaf5c71.png |
|--------|-----------------------------------------|
[0;39m
[2024-06-19 11:22:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 233
 {executed in 1 msec}[0;39m
[2024-06-19 11:22:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:22:49 [32mINFO [0;39m http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 345 ms[0;39m
[2024-06-19 11:23:12 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:23:12 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:23:19 [31mERROR[0;39m http-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception[0;39m
java.io.FileNotFoundException: class path resource [static/index.html] cannot be resolved to URL because it does not exist
	at org.springframework.core.io.ClassPathResource.getURL(ClassPathResource.java:230)
	at org.springframework.core.io.AbstractFileResolvingResource.lastModified(AbstractFileResolvingResource.java:268)
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:598)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-06-19 11:23:41 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:23:41 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:23:44 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:23:44 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:23:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%모%'
                OR
                A.content LIKE '%모%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:23:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:23:49 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:23:49 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:24:00 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:24:00 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:24:05 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:24:05 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:24:08 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%모%'
                OR
                A.content LIKE '%모%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:24:08 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:25:06 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:25:06 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:25:14 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ런아럼ㄴ이럼ㅇㄴㄹ%'
                OR
                A.content LIKE '%ㅁ런아럼ㄴ이럼ㅇㄴㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:25:14 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:25:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:25:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:25:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:25:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:25:50 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:25:50 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:26:22 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:26:22 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:26:24 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%모%'
                OR
                A.content LIKE '%모%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:26:24 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:26:25 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:26:25 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:26:42 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:26:42 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:28:03 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:28:03 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:28:05 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄹㄴㅁㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄹㄴㅁㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:28:05 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:28:08 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:28:08 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:28:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㅁㅇㄴㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㅁㅇㄴㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:28:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:28:11 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:28:11 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:28:48 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:28:48 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:29:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:29:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:29:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:29:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:29:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:29:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:29:54 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:29:54 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:29:54 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:29:54 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:29:54 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:29:54 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:31:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id
        FROM user
         WHERE id = 'greenuser1'
 {executed in 0 msec}[0;39m
[2024-06-19 11:31:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 11:32:00 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id
        FROM user
         WHERE email = 'greenuser1@gmail.com'
 {executed in 1 msec}[0;39m
[2024-06-19 11:32:00 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 11:32:17 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'greenuser1'
 {executed in 1 msec}[0;39m
[2024-06-19 11:32:17 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|---|-----|----|------|
|user_id |id |name |pwd |email |
|--------|---|-----|----|------|
|--------|---|-----|----|------|
[0;39m
[2024-06-19 11:32:17 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO user
         SET id = 'greenuser1'
        , name = '유저이름'
        , pwd = '$2a$10$ZwZhb75VKdDTi7XoAZzjmO6tpKBcCLUkuLeBQk.jiWMJmC3oFVTZS'
        , email = 'greenuser1@gmail.com'
 {executed in 2 msec}[0;39m
[2024-06-19 11:32:17 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO user
         SET id = 'greenuser1'
        , name = '유저이름'
        , pwd = '$2a$10$ZwZhb75VKdDTi7XoAZzjmO6tpKBcCLUkuLeBQk.jiWMJmC3oFVTZS'
        , email = 'greenuser1@gmail.com'
 {executed in 0 msec}[0;39m
[2024-06-19 11:32:17 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|123       |
|----------|
[0;39m
[2024-06-19 11:32:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT id
        FROM user
        WHERE email = 'greenuser1@gmail.com' AND name = '유저이름'
 {executed in 0 msec}[0;39m
[2024-06-19 11:32:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------|
|id         |
|-----------|
|greenuser1 |
|-----------|
[0;39m
[2024-06-19 11:35:33 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT user_id AS userId
        FROM user
        WHERE id = 'greenuser1' AND email = 'greenuser1@gmail.com'
 {executed in 0 msec}[0;39m
[2024-06-19 11:35:33 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|123     |
|--------|
[0;39m
[2024-06-19 11:35:33 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'greenuser1'
 {executed in 0 msec}[0;39m
[2024-06-19 11:35:33 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|user_id |id         |name |pwd                                                          |email                |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|123     |greenuser1 |유저이름 |$2a$10$ZwZhb75VKdDTi7XoAZzjmO6tpKBcCLUkuLeBQk.jiWMJmC3oFVTZS |greenuser1@gmail.com |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
[0;39m
[2024-06-19 11:38:04 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:38:04 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:38:04 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:38:04 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:38:04 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:38:04 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:40:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:40:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:40:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:40:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:40:40 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 211
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:40 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:40:40 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 211
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:40 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at          |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|211      |1           |8       |보드보드  |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:15:32 |2024-06-19 11:20:27 |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
[0;39m
[2024-06-19 11:40:40 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 211
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:40 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:40:40 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 211
 {executed in 0 msec}[0;39m
[2024-06-19 11:40:40 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:40:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:40:43 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:43 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:40:46 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:40:46 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:40:49 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=ㅁㄴㅇㄻㄴㅇㄹ, content=ㅁㄴㅇㄻㄴㅇㄻㄹ, startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:40:50 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:50 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:40:54 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%'
                OR
                A.content LIKE '%ㅁㄴㅇㄻㄴㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:40:54 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:40:56 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:40:56 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:41:09 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:09 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:41:22 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'greenuser1'
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:22 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|user_id |id         |name |pwd                                                          |email                |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|123     |greenuser1 |유저이름 |$2a$10$ZwZhb75VKdDTi7XoAZzjmO6tpKBcCLUkuLeBQk.jiWMJmC3oFVTZS |greenuser1@gmail.com |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 123
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 123 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 123
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-----|------|------|-----------|-----------|
|calendar_id |user_id |name |title |color |created_at |updated_at |
|------------|--------|-----|------|------|-----------|-----------|
|------------|--------|-----|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|--------|-----------|-----------|
|notice_id |calendar_id |content |created_at |updated_at |
|----------|------------|--------|-----------|-----------|
|----------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 123 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 123 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 123 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|--------|----------|------|
|board_id |calendar_id |color |title |content |start_day |d_day |
|---------|------------|------|------|--------|----------|------|
|---------|------------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 123
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-----|------|------|-----------|-----------|
|calendar_id |user_id |name |title |color |created_at |updated_at |
|------------|--------|-----|------|------|-----------|-----------|
|------------|--------|-----|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 123 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 123 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 123 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:41:23 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 123
 {executed in 2 msec}[0;39m
[2024-06-19 11:41:23 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-----|------|------|-----------|-----------|
|calendar_id |user_id |name |title |color |created_at |updated_at |
|------------|--------|-----|------|------|-----------|-----------|
|------------|--------|-----|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:41:26 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보드%'
                OR
                A.content LIKE '%보드%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:26 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:41:28 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:28 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:41:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=, content=, startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:41:32 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:32 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:41:36 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:36 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:41:41 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 215
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:41 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:41:41 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 215
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:41 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
|215      |1           |72      |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |1     |2024-06-18 |2024-06-19 |00:00:00  |2024-06-18 15:26:37 |null       |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:41:41 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 215
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:41 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:41:41 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 215
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:41 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:41:44 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:41:44 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:41:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 123
 {executed in 0 msec}[0;39m
[2024-06-19 11:41:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|user_id |id         |name |pwd                                                          |email                |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|123     |greenuser1 |유저이름 |$2a$10$ZwZhb75VKdDTi7XoAZzjmO6tpKBcCLUkuLeBQk.jiWMJmC3oFVTZS |greenuser1@gmail.com |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
[0;39m
[2024-06-19 11:42:17 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%없는 검색어로 검색%'
                OR
                A.content LIKE '%없는 검색어로 검색%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:42:17 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:43:19 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보드검색%'
                OR
                A.content LIKE '%보드검색%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:19 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:43:22 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보드%'
                OR
                A.content LIKE '%보드%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:43:22 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:43:34 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:34 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:43:35 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:35 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:43:36 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 2 msec}[0;39m
[2024-06-19 11:43:36 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|----------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content   |start_day  |d_day      |
|---------|------------|-------------|--------|------|----------|-----------|-----------|
|206      |1           |title(2차 수정) |#339AF0 |일정 2  |일정 2 입니다. |2024-06-27 |2024-06-27 |
|208      |1           |title(2차 수정) |#339AF0 |네 확인  |ㄴㅇㄹㄴㄹㅇㄴ   |2024-06-18 |2024-06-21 |
|209      |1           |title(2차 수정) |#339AF0 |내가또?  |ㄴㄹㅇㄴㄹㄴ    |2024-06-18 |2024-06-19 |
|---------|------------|-------------|--------|------|----------|-----------|-----------|
[0;39m
[2024-06-19 11:43:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:43:39 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:39 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|----------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content   |start_day  |d_day      |
|---------|------------|-------------|--------|------|----------|-----------|-----------|
|206      |1           |title(2차 수정) |#339AF0 |일정 2  |일정 2 입니다. |2024-06-27 |2024-06-27 |
|208      |1           |title(2차 수정) |#339AF0 |네 확인  |ㄴㅇㄹㄴㄹㅇㄴ   |2024-06-18 |2024-06-21 |
|209      |1           |title(2차 수정) |#339AF0 |내가또?  |ㄴㄹㅇㄴㄹㄴ    |2024-06-18 |2024-06-19 |
|---------|------------|-------------|--------|------|----------|-----------|-----------|
[0;39m
[2024-06-19 11:43:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 208 AND calendar_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 11:43:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at          |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|208      |1           |72      |네 확인  |ㄴㅇㄹㄴㄹㅇㄴ |3     |2024-06-18 |2024-06-21 |00:00:00  |2024-06-18 12:54:57 |2024-06-18 12:56:03 |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
[0;39m
[2024-06-19 11:43:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 209 AND calendar_id = 1
 {executed in 0 msec}[0;39m
[2024-06-19 11:43:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at          |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|209      |1           |72      |내가또?  |ㄴㄹㅇㄴㄹㄴ  |3     |2024-06-18 |2024-06-19 |00:00:00  |2024-06-18 12:57:31 |2024-06-18 12:57:39 |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
[0;39m
[2024-06-19 11:43:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tag_id
        FROM board_tag
        WHERE board_id = 208
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-------|
|tag_id |
|-------|
|-------|
[0;39m
[2024-06-19 11:43:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tag_id
        FROM board_tag
        WHERE board_id = 209
 {executed in 0 msec}[0;39m
[2024-06-19 11:43:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-------|
|tag_id |
|-------|
|-------|
[0;39m
[2024-06-19 11:43:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM board
        WHERE board_id = 208
 {executed in 0 msec}[0;39m
[2024-06-19 11:43:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM board
        WHERE board_id = 209
 {executed in 0 msec}[0;39m
[2024-06-19 11:43:46 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:46 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|----------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content   |start_day  |d_day      |
|---------|------------|-------------|--------|------|----------|-----------|-----------|
|206      |1           |title(2차 수정) |#339AF0 |일정 2  |일정 2 입니다. |2024-06-27 |2024-06-27 |
|---------|------------|-------------|--------|------|----------|-----------|-----------|
[0;39m
[2024-06-19 11:43:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:43:50 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. UPDATE board
        SET state = 3
        WHERE board_id = 205
 {executed in 2 msec}[0;39m
[2024-06-19 11:43:51 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:51 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:43:51 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:51 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|----------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content   |start_day  |d_day      |
|---------|------------|-------------|--------|------|----------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중       |2024-06-20 |2024-06-21 |
|206      |1           |title(2차 수정) |#339AF0 |일정 2  |일정 2 입니다. |2024-06-27 |2024-06-27 |
|---------|------------|-------------|--------|------|----------|-----------|-----------|
[0;39m
[2024-06-19 11:43:54 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 206 AND calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:54 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|----------|------|-----------|-----------|----------|--------------------|--------------------|
|board_id |calendar_id |user_id |title |content   |state |start_day  |d_day      |dead_line |created_at          |updated_at          |
|---------|------------|--------|------|----------|------|-----------|-----------|----------|--------------------|--------------------|
|206      |1           |72      |일정 2  |일정 2 입니다. |3     |2024-06-27 |2024-06-27 |00:00:00  |2024-06-18 11:17:29 |2024-06-18 12:35:10 |
|---------|------------|--------|------|----------|------|-----------|-----------|----------|--------------------|--------------------|
[0;39m
[2024-06-19 11:43:54 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tag_id
        FROM board_tag
        WHERE board_id = 206
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:54 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-------|
|tag_id |
|-------|
|-------|
[0;39m
[2024-06-19 11:43:54 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM board
        WHERE board_id = 206
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:54 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 0 msec}[0;39m
[2024-06-19 11:43:54 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:43:55 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:43:55 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:43:57 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:43:57 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:43:58 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:43:58 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:44:00 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%일정%'
                OR
                A.content LIKE '%일정%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:00 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:44:01 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:01 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:44:09 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=일정 1, content=일정 1 입니다., startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:44:09 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:09 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:44:18 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=일정 3, content=일정 3입니다., startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:44:19 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:19 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:44:26 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=일정 4, content=일정 4 입니다., startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:44:26 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:44:26 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:44:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=일정 5, content=일정 5입니다., startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:44:32 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:44:32 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:44:33 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%일정%'
                OR
                A.content LIKE '%일정%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:33 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:44:36 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:36 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:44:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:44:37 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:37 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:44:37 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:37 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:44:43 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id
        FROM user
         WHERE email = 'greenuser2@gmail.com'
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:43 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 11:44:53 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=72, title=일정 6, content=일정 6입니다.
, startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:44:53 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:44:53 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:44:56 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%1%'
                OR
                A.content LIKE '%1%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:44:56 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:44:58 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%2%'
                OR
                A.content LIKE '%2%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:44:58 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:44:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%3%'
                OR
                A.content LIKE '%3%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:44:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:45:01 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%4%'
                OR
                A.content LIKE '%4%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:01 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:45:02 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보드%'
                OR
                A.content LIKE '%보드%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:02 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:45:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:45:04 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:04 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|205      |1           |title(2차 수정) |#339AF0 |등록    |확인중     |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:45:07 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 205 AND calendar_id = 1
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:07 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at          |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|205      |1           |72      |등록    |확인중     |3     |2024-06-20 |2024-06-21 |00:00:00  |2024-06-18 11:15:31 |2024-06-19 11:43:50 |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
[0;39m
[2024-06-19 11:45:07 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tag_id
        FROM board_tag
        WHERE board_id = 205
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:07 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-------|
|tag_id |
|-------|
|-------|
[0;39m
[2024-06-19 11:45:07 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM board
        WHERE board_id = 205
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:07 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:07 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:45:08 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:08 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:45:17 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 211
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:17 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:45:17 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 211
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:17 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at          |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|211      |1           |8       |보드보드  |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:15:32 |2024-06-19 11:20:27 |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
[0;39m
[2024-06-19 11:45:17 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 211
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:17 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:45:17 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 211
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:17 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:45:18 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:18 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:45:20 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 211
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:20 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 211
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:20 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:45:20 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at          |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|211      |1           |8       |보드보드  |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:15:32 |2024-06-19 11:20:27 |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
[0;39m
[2024-06-19 11:45:20 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 211
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:20 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:45:20 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 211
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:20 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:45:22 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 211
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:22 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:45:22 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 211
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:22 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|board_id |calendar_id |user_id |title |content |state |start_day  |d_day      |dead_line |created_at          |updated_at          |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
|211      |1           |8       |보드보드  |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:15:32 |2024-06-19 11:20:27 |
|---------|------------|--------|------|--------|------|-----------|-----------|----------|--------------------|--------------------|
[0;39m
[2024-06-19 11:45:22 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 211
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:22 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:45:22 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 211
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:22 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:45:27 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:27 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:45:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:45:56 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:56 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:45:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:45:57 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:57 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:45:58 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 0 msec}[0;39m
[2024-06-19 11:45:58 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:45:58 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:58 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:45:58 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 11:45:58 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:46:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:46:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:46:05 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:46:05 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:46:31 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 11:46:31 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:46:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 11:46:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:46:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 11:46:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:46:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 11:46:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:46:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:46:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|210      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:46:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보드%'
                OR
                A.content LIKE '%보드%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:46:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:46:45 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. UPDATE board
        SET state = 2
        WHERE board_id = 210
 {executed in 2 msec}[0;39m
[2024-06-19 11:46:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보드%'
                OR
                A.content LIKE '%보드%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:46:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |2     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:46:54 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:46:54 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:47:06 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%업로드%'
                OR
                A.content LIKE '%업로드%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:06 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|225      |1           |title(2차 수정) |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |1     |
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 11:47:08 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:08 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:47:11 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 225
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:11 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:47:11 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 225
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:11 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|----------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|----------|------|-----------|-----------|----------|--------------------|-----------|
|225      |1           |72      |다시 이미지업로드 |다시 이미지업로드 |1     |2024-06-20 |2024-06-27 |00:00:00  |2024-06-19 10:56:41 |null       |
|---------|------------|--------|----------|----------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:47:11 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 225
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:11 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:47:11 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 225
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:11 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:47:12 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:12 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:47:13 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:13 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:13 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:47:13 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:47:13 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 11:47:13 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:47:13 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:13 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:47:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:47:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:47:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:18 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:18 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:47:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 11:47:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 11:47:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 11:47:18 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:47:18 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:47:25 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%아마자%'
                OR
                A.content LIKE '%아마자%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:47:25 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:47:27 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%이미지%'
                OR
                A.content LIKE '%이미지%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:47:27 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|225      |1           |title(2차 수정) |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |1     |
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 11:47:31 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:47:31 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:48:02 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 0 msec}[0;39m
[2024-06-19 11:48:02 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:48:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 11:48:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:48:05 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:48:05 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:48:10 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 11:48:10 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:48:11 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 11:48:11 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:48:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 0 msec}[0;39m
[2024-06-19 11:48:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:48:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:48:13 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:48:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:48:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:50:42 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:50:42 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:50:55 [32mINFO [0;39m http-nio-8080-exec-1] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 170 ms[0;39m
[2024-06-19 11:51:07 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%업로드%'
                OR
                A.content LIKE '%업로드%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:51:07 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|225      |1           |title(2차 수정) |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |1     |
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 11:51:09 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%업로드%'
                OR
                A.content LIKE '%업로드%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:51:09 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|225      |1           |title(2차 수정) |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |1     |
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 11:51:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%gogo%'
                OR
                A.content LIKE '%gogo%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:51:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|---------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content  |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|---------|-----------|-----------|------|
|233      |1           |title(2차 수정) |#339AF0 |gogo  |gogogogo |2024-06-19 |2024-06-21 |1     |
|---------|------------|-------------|--------|------|---------|-----------|-----------|------|
[0;39m
[2024-06-19 11:51:55 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:51:55 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:52:00 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId
        FROM user
        WHERE id = 'greenuser1' AND email = 'greenuser1@gmail.com'
 {executed in 1 msec}[0;39m
[2024-06-19 11:52:00 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|123     |
|--------|
[0;39m
[2024-06-19 11:52:00 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'greenuser1'
 {executed in 0 msec}[0;39m
[2024-06-19 11:52:00 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|user_id |id         |name |pwd                                                          |email                |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|123     |greenuser1 |유저이름 |$2a$10$ZwZhb75VKdDTi7XoAZzjmO6tpKBcCLUkuLeBQk.jiWMJmC3oFVTZS |greenuser1@gmail.com |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
[0;39m
[2024-06-19 11:52:58 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:52:58 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:52:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 2 msec}[0;39m
[2024-06-19 11:52:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 11:52:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 11:52:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:53:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:53:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:53:37 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%업로드%'
                OR
                A.content LIKE '%업로드%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:37 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|225      |1           |title(2차 수정) |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |1     |
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 11:53:44 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:44 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:53:51 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%업로드%'
                OR
                A.content LIKE '%업로드%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:53:51 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|225      |1           |title(2차 수정) |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |1     |
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 11:53:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'test1234'
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|---------|-------|-------------------------------------------------------------|---------------|
|user_id |id       |name   |pwd                                                          |email          |
|--------|---------|-------|-------------------------------------------------------------|---------------|
|8       |test1234 |백창현 미워 |$2a$10$DPdMoBtxgr/rRJiEA6E3RO7HhdUkfzt9GbsE5nmqyV6kPhcukRMwm |test@naver.com |
|--------|---------|-------|-------------------------------------------------------------|---------------|
[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 2 msec}[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|------------|------------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                         |created_at          |updated_at |
|----------|------------|------------------------------------------------|--------------------|-----------|
|1202      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'gogo'       |2024-06-19 11:10:11 |null       |
|1201      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1'              |2024-06-19 11:09:29 |null       |
|1200      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅎㅎㅎ'        |2024-06-19 10:58:31 |null       |
|1199      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '다시 이미지업로드'  |2024-06-19 10:56:41 |null       |
|1198      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '이미지업로드 테스트' |2024-06-19 10:54:19 |null       |
|1195      |71          |'조수현'님이 '새로만든 캘린더'에 추가되었습니다.                    |2024-06-19 10:48:14 |null       |
|----------|------------|------------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:53:52 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:52 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:53:56 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%52%'
                OR
                A.content LIKE '%52%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:53:56 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:53:57 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%62%'
                OR
                A.content LIKE '%62%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:53:57 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
|214      |62          |SLR McLaren 2차 수정 |#FCC419 |62번 캘린더 보드 |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:54:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:54:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:54:03 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%2번%'
                OR
                A.content LIKE '%2번%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 11:54:03 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
|214      |62          |SLR McLaren 2차 수정 |#FCC419 |62번 캘린더 보드 |content |2024-06-12 |2024-06-18 |1     |
|213      |2           |A팀 캘린더            |#339AF0 |2번 캘린더 보드  |content |2024-06-12 |2024-06-18 |1     |
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 11:54:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:54:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:54:43 [32mINFO [0;39m http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 143 ms[0;39m
[2024-06-19 11:54:48 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id
        FROM user
         WHERE email = 'greenuser2@gmail.com'
 {executed in 1 msec}[0;39m
[2024-06-19 11:54:48 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 11:54:51 [32mINFO [0;39m http-nio-8080-exec-1] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 149 ms[0;39m
[2024-06-19 11:55:41 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT user_id
        FROM user
         WHERE id = 'greenuser2'
 {executed in 0 msec}[0;39m
[2024-06-19 11:55:41 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 11:55:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT user_id
        FROM user
         WHERE email = 'greenuser2@gmail.com'
 {executed in 1 msec}[0;39m
[2024-06-19 11:55:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 11:55:43 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'greenuser2'
 {executed in 1 msec}[0;39m
[2024-06-19 11:55:43 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|---|-----|----|------|
|user_id |id |name |pwd |email |
|--------|---|-----|----|------|
|--------|---|-----|----|------|
[0;39m
[2024-06-19 11:55:43 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO user
         SET id = 'greenuser2'
        , name = '유저이름'
        , pwd = '$2a$10$XGcF3H9aTpH/cC1z9jCHyOnkSQEGrAIJw/Abm6kZU6pBVVHwgqWwO'
        , email = 'greenuser2@gmail.com'
 {executed in 3 msec}[0;39m
[2024-06-19 11:55:43 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
21. getGeneratedKeys on query: INSERT INTO user
         SET id = 'greenuser2'
        , name = '유저이름'
        , pwd = '$2a$10$XGcF3H9aTpH/cC1z9jCHyOnkSQEGrAIJw/Abm6kZU6pBVVHwgqWwO'
        , email = 'greenuser2@gmail.com'
 {executed in 0 msec}[0;39m
[2024-06-19 11:55:43 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|124       |
|----------|
[0;39m
[2024-06-19 11:56:24 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:56:24 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:56:25 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:56:25 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:56:55 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 11:56:55 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 11:56:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 1 AND A.user_id != 1
 {executed in 1 msec}[0;39m
[2024-06-19 11:56:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-------|----------------|
|user_id |name   |email           |
|--------|-------|----------------|
|8       |백창현 미워 |test@naver.com  |
|31      |김밥천국   |ggg@ggg.net     |
|72      |조수현    |tngus@naver.com |
|--------|-------|----------------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 2 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|------------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                         |created_at          |updated_at |
|----------|------------|------------------------------------------------|--------------------|-----------|
|1202      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'gogo'       |2024-06-19 11:10:11 |null       |
|1201      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1'              |2024-06-19 11:09:29 |null       |
|1200      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅎㅎㅎ'        |2024-06-19 10:58:31 |null       |
|1199      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '다시 이미지업로드'  |2024-06-19 10:56:41 |null       |
|1198      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '이미지업로드 테스트' |2024-06-19 10:54:19 |null       |
|1195      |71          |'조수현'님이 '새로만든 캘린더'에 추가되었습니다.                    |2024-06-19 10:48:14 |null       |
|----------|------------|------------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:57:08 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:08 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:57:09 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 62 AND A.user_id != 8
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:09 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----|------------|
|user_id |name |email       |
|--------|-----|------------|
|31      |김밥천국 |ggg@ggg.net |
|--------|-----|------------|
[0;39m
[2024-06-19 11:57:09 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 62 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:09 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|------------|
|user_id |name |email       |
|--------|-----|------------|
|31      |김밥천국 |ggg@ggg.net |
|--------|-----|------------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|------------|------------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                         |created_at          |updated_at |
|----------|------------|------------------------------------------------|--------------------|-----------|
|1202      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'gogo'       |2024-06-19 11:10:11 |null       |
|1201      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1'              |2024-06-19 11:09:29 |null       |
|1200      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅎㅎㅎ'        |2024-06-19 10:58:31 |null       |
|1199      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '다시 이미지업로드'  |2024-06-19 10:56:41 |null       |
|1198      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '이미지업로드 테스트' |2024-06-19 10:54:19 |null       |
|1195      |71          |'조수현'님이 '새로만든 캘린더'에 추가되었습니다.                    |2024-06-19 10:48:14 |null       |
|----------|------------|------------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:57:20 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:20 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:57:22 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:22 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----|----------------|
|user_id |name |email           |
|--------|-----|----------------|
|72      |조수현  |tngus@naver.com |
|--------|-----|----------------|
[0;39m
[2024-06-19 11:57:22 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name, B.email
        FROM calendar_user A
        JOIN user B ON A.user_id = B.user_id
        WHERE calendar_id = 71 AND A.user_id != 8
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:22 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|----------------|
|user_id |name |email           |
|--------|-----|----------------|
|72      |조수현  |tngus@naver.com |
|--------|-----|----------------|
[0;39m
[2024-06-19 11:57:31 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.todo.board.BoardController] [36m보드 정보CreateBoardReq(boardId=0, calendarId=1, signedUserId=8, title=sdafasdfdasf, content=asfasdfasdfsdaf, startDay=, dDay=, deadLine=00:00:00, existTag=[], notExistTag=[])[0;39m
[2024-06-19 11:57:32 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:32 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:57:34 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 11:57:34 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |2     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 11:57:44 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:57:44 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:58:03 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%20%'
                OR
                A.content LIKE '%20%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:58:03 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:58:44 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%없는 일정%'
                OR
                A.content LIKE '%없는 일정%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 11:58:44 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 11:59:25 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 1 msec}[0;39m
[2024-06-19 11:59:25 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 11:59:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 11:59:29 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:29 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 11:59:59 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 11:59:59 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 11:59:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 11:59:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:00:00 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:00:00 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:01:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'test1234'
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|---------|-------|-------------------------------------------------------------|---------------|
|user_id |id       |name   |pwd                                                          |email          |
|--------|---------|-------|-------------------------------------------------------------|---------------|
|8       |test1234 |백창현 미워 |$2a$10$DPdMoBtxgr/rRJiEA6E3RO7HhdUkfzt9GbsE5nmqyV6kPhcukRMwm |test@naver.com |
|--------|---------|-------|-------------------------------------------------------------|---------------|
[0;39m
[2024-06-19 12:01:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|------------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                         |created_at          |updated_at |
|----------|------------|------------------------------------------------|--------------------|-----------|
|1202      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'gogo'       |2024-06-19 11:10:11 |null       |
|1201      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1'              |2024-06-19 11:09:29 |null       |
|1200      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅎㅎㅎ'        |2024-06-19 10:58:31 |null       |
|1199      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '다시 이미지업로드'  |2024-06-19 10:56:41 |null       |
|1198      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '이미지업로드 테스트' |2024-06-19 10:54:19 |null       |
|1195      |71          |'조수현'님이 '새로만든 캘린더'에 추가되었습니다.                    |2024-06-19 10:48:14 |null       |
|----------|------------|------------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:01:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:01:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:01:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 12:01:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 12:01:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 12:01:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 12:01:21 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 0 msec}[0;39m
[2024-06-19 12:01:21 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:02:04 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 12:02:04 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:02:04 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:02:04 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:02:04 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:02:04 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:02:08 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㄴㅇ%'
                OR
                A.content LIKE '%ㄴㅇ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:02:08 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:02:10 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㄱ3ㄱㄷㅇㄹ%'
                OR
                A.content LIKE '%ㄱ3ㄱㄷㅇㄹ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:02:10 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 12:02:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 12:02:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:02:44 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:02:44 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:03:08 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%테스트%'
                OR
                A.content LIKE '%테스트%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:03:08 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:03:11 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 12:03:11 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:03:11 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 12:03:11 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 12:03:11 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 12:03:11 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 12:03:11 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 12:03:11 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:03:12 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:03:12 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:03:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%테스트%'
                OR
                A.content LIKE '%테스트%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 12:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title      |content                   |start_day  |d_day      |state |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
|224      |1           |title(2차 수정) |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|-----------|--------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:03:49 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:03:49 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:05:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:05:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:05:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 12:05:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:06:21 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%페이지%'
                OR
                A.content LIKE '%페이지%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:06:21 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 12:06:25 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:25 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 12:06:25 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:25 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:25 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 12:06:25 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:06:25 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:06:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:06:25 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:06:25 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:25 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:06:25 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:06:25 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:06:26 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:26 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:06:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:26 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:06:26 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:06:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:06:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:06:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:06:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:06:28 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%페이지%'
                OR
                A.content LIKE '%페이지%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:06:28 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 12:08:16 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:16 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title      |content              |start_day  |d_day      |
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
|210      |1           |title(2차 수정)      |#339AF0 |보드보드       |content              |2024-06-12 |2024-06-18 |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam           |2024-06-13 |2024-07-29 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:08:19 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 3
        WHERE board_id = 210
 {executed in 5 msec}[0;39m
[2024-06-19 12:08:19 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:19 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title      |content              |start_day  |d_day      |
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam           |2024-06-13 |2024-07-29 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:08:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%보드%'
                OR
                A.content LIKE '%보드%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
|214      |62          |SLR McLaren 2차 수정 |#FCC419 |62번 캘린더 보드 |content |2024-06-12 |2024-06-18 |1     |
|213      |2           |A팀 캘린더            |#339AF0 |2번 캘린더 보드  |content |2024-06-12 |2024-06-18 |1     |
|211      |1           |title(2차 수정)      |#339AF0 |보드보드       |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정)      |#339AF0 |보드보드       |content |2024-06-12 |2024-06-18 |3     |
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:08:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 12:08:30 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:30 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:08:31 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:31 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:08:41 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:41 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:08:46 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%보드%'
                OR
                A.content LIKE '%보드%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:46 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
|214      |62          |SLR McLaren 2차 수정 |#FCC419 |62번 캘린더 보드 |content |2024-06-12 |2024-06-18 |1     |
|213      |2           |A팀 캘린더            |#339AF0 |2번 캘린더 보드  |content |2024-06-12 |2024-06-18 |1     |
|211      |1           |title(2차 수정)      |#339AF0 |보드보드       |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정)      |#339AF0 |보드보드       |content |2024-06-12 |2024-06-18 |3     |
|---------|------------|------------------|--------|-----------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:08:46 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'test1234'
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:46 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|---------|-------|-------------------------------------------------------------|---------------|
|user_id |id       |name   |pwd                                                          |email          |
|--------|---------|-------|-------------------------------------------------------------|---------------|
|8       |test1234 |백창현 미워 |$2a$10$DPdMoBtxgr/rRJiEA6E3RO7HhdUkfzt9GbsE5nmqyV6kPhcukRMwm |test@naver.com |
|--------|---------|-------|-------------------------------------------------------------|---------------|
[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------|------------|------------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                         |created_at          |updated_at |
|----------|------------|------------------------------------------------|--------------------|-----------|
|1202      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'gogo'       |2024-06-19 11:10:11 |null       |
|1201      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1'              |2024-06-19 11:09:29 |null       |
|1200      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅎㅎㅎ'        |2024-06-19 10:58:31 |null       |
|1199      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '다시 이미지업로드'  |2024-06-19 10:56:41 |null       |
|1198      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '이미지업로드 테스트' |2024-06-19 10:54:19 |null       |
|1195      |71          |'조수현'님이 '새로만든 캘린더'에 추가되었습니다.                    |2024-06-19 10:48:14 |null       |
|----------|------------|------------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:08:47 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:47 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:08:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title      |content              |start_day  |d_day      |
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam           |2024-06-13 |2024-07-29 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|-----------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:08:50 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. UPDATE board
        SET state = 3
        WHERE board_id = 161
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:50 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 224
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:50 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:08:50 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:50 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------|-----------|-----------|
|board_id |calendar_id |title             |color   |title      |content    |start_day  |d_day      |
|---------|------------|------------------|--------|-----------|-----------|-----------|-----------|
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam |2024-06-13 |2024-07-29 |
|---------|------------|------------------|--------|-----------|-----------|-----------|-----------|
[0;39m
[2024-06-19 12:08:50 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:50 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content                   |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
|224      |1           |72      |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |1     |2024-06-20 |2024-06-28 |00:00:00  |2024-06-19 10:54:19 |null       |
|---------|------------|--------|-----------|--------------------------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 12:08:50 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 224
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:50 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 12:08:50 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 224
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:50 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:08:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. UPDATE board
        SET state = 1
        WHERE board_id = 119
 {executed in 3 msec}[0;39m
[2024-06-19 12:08:52 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:52 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:08:53 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:53 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:08:53 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 214
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:53 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:08:54 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 214
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:54 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|214      |62          |8       |62번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:25 |null       |
|---------|------------|--------|-----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 12:08:54 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 214
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:54 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 12:08:54 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 214
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:54 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:08:55 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%ㅍ%'
                OR
                A.content LIKE '%ㅍ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:55 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 12:08:55 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:08:55 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|151      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:08:56 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:08:56 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:09:02 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:02 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:02 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:02 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:09:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:03 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:03 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:04 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:04 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:09:06 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:06 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:07 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 2
        WHERE board_id = 151
 {executed in 3 msec}[0;39m
[2024-06-19 12:09:07 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:07 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:09:07 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:07 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:08 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:08 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:09 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:09 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:10 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 1
        WHERE board_id = 161
 {executed in 3 msec}[0;39m
[2024-06-19 12:09:11 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:11 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:09:12 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. UPDATE board
        SET state = 2
        WHERE board_id = 161
 {executed in 2 msec}[0;39m
[2024-06-19 12:09:12 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 12:09:12 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:09:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:14 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:14 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:15 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:15 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:09:18 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:18 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:09:19 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:19 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title |content              |start_day  |d_day      |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:09:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:09:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:09:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|119      |62          |#FCC419 |Volkswagen |2024-07-29 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:09:21 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:21 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-------|---------|-----------|-----------|
|board_id |calendar_id |title             |color   |title  |content  |start_day  |d_day      |
|---------|------------|------------------|--------|-------|---------|-----------|-----------|
|210      |1           |title(2차 수정)      |#339AF0 |보드보드   |content  |2024-06-12 |2024-06-18 |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki |Greenlam |2024-06-28 |2024-07-09 |
|---------|------------|------------------|--------|-------|---------|-----------|-----------|
[0;39m
[2024-06-19 12:09:22 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:22 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title |content              |start_day  |d_day      |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:09:24 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. UPDATE board
        SET state = 3
        WHERE board_id = 151
 {executed in 3 msec}[0;39m
[2024-06-19 12:09:24 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. UPDATE board
        SET state = 3
        WHERE board_id = 161
 {executed in 3 msec}[0;39m
[2024-06-19 12:09:25 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:25 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:09:26 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:26 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|---------|-------|-------------------------------------------------------------|---------------|
|user_id |id       |name   |pwd                                                          |email          |
|--------|---------|-------|-------------------------------------------------------------|---------------|
|8       |test1234 |백창현 미워 |$2a$10$DPdMoBtxgr/rRJiEA6E3RO7HhdUkfzt9GbsE5nmqyV6kPhcukRMwm |test@naver.com |
|--------|---------|-------|-------------------------------------------------------------|---------------|
[0;39m
[2024-06-19 12:09:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%V%'
                OR
                A.content LIKE '%V%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:09:29 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 12:09:29 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:09:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:09:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|139      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|147      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:09:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:09:57 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. UPDATE board
        SET state = 1
        WHERE board_id = 161
 {executed in 2 msec}[0;39m
[2024-06-19 12:09:57 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 12:09:57 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:00 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 2
        WHERE board_id = 119
 {executed in 3 msec}[0;39m
[2024-06-19 12:10:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |2     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:01 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 2
        WHERE board_id = 139
 {executed in 3 msec}[0;39m
[2024-06-19 12:10:02 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:02 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |2     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:02 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. UPDATE board
        SET state = 2
        WHERE board_id = 147
 {executed in 3 msec}[0;39m
[2024-06-19 12:10:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |2     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |2     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:04 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:04 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|161      |62          |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:10:05 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 3
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:05 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title  |content              |start_day  |d_day      |
|---------|------------|------------------|--------|-------|---------------------|-----------|-----------|
|210      |1           |title(2차 수정)      |#339AF0 |보드보드   |content              |2024-06-12 |2024-06-18 |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki |Greenlam             |2024-06-28 |2024-07-09 |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo  |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|-------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:10:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|----------------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title      |content                     |start_day  |d_day      |
|---------|------------|------------------|--------|-----------|----------------------------|-----------|-----------|
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                  |2024-06-13 |2024-07-29 |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack        |2022-08-08 |2024-02-28 |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc. |2023-12-26 |2024-05-20 |
|---------|------------|------------------|--------|-----------|----------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:10:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. UPDATE board
        SET state = 3
        WHERE board_id = 119
 {executed in 2 msec}[0;39m
[2024-06-19 12:10:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. UPDATE board
        SET state = 3
        WHERE board_id = 139
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. UPDATE board
        SET state = 3
        WHERE board_id = 147
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:10:13 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 12:10:13 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:23 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 1
        WHERE board_id = 119
 {executed in 2 msec}[0;39m
[2024-06-19 12:10:23 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 12:10:23 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:24 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. UPDATE board
        SET state = 1
        WHERE board_id = 139
 {executed in 2 msec}[0;39m
[2024-06-19 12:10:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. UPDATE board
        SET state = 1
        WHERE board_id = 151
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:26 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:26 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:29 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. UPDATE board
        SET state = 2
        WHERE board_id = 161
 {executed in 2 msec}[0;39m
[2024-06-19 12:10:29 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:29 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:30 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 2
        WHERE board_id = 151
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:30 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:30 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 2
        WHERE board_id = 139
 {executed in 2 msec}[0;39m
[2024-06-19 12:10:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 12:10:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. UPDATE board
        SET state = 2
        WHERE board_id = 139
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:32 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:32 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:10:33 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:10:33 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title |content              |start_day  |d_day      |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:10:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT user_id
        FROM user
         WHERE email = 'greenuser1@gmail.com'
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|123     |
|--------|
[0;39m
[2024-06-19 12:10:57 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT user_id
        FROM user
         WHERE email = 'greenuser3@gmail.com'
 {executed in 0 msec}[0;39m
[2024-06-19 12:10:57 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 12:11:05 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:11:05 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title |content              |start_day  |d_day      |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:11:40 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 3
        WHERE board_id = 139
 {executed in 3 msec}[0;39m
[2024-06-19 12:11:40 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 3
        WHERE board_id = 151
 {executed in 3 msec}[0;39m
[2024-06-19 12:11:40 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 3
        WHERE board_id = 161
 {executed in 2 msec}[0;39m
[2024-06-19 12:11:40 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:11:40 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:11:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:11:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:11:44 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:11:44 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:12:33 [31mERROR[0;39m http-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception[0;39m
java.io.FileNotFoundException: class path resource [static/index.html] cannot be resolved to URL because it does not exist
	at org.springframework.core.io.ClassPathResource.getURL(ClassPathResource.java:230)
	at org.springframework.core.io.AbstractFileResolvingResource.lastModified(AbstractFileResolvingResource.java:268)
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:598)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-06-19 12:12:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 12:12:38 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:38 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 12:12:38 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:38 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 12:12:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:38 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:12:38 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:38 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:12:38 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:12:38 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:38 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:12:38 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:38 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:12:39 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:39 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|211      |1           |#339AF0 |보드보드       |content                   |2024-06-12 |2024-06-18 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:12:39 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:39 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:12:39 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:39 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:12:39 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:39 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:12:39 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:39 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:12:39 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:39 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 12:12:39 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:39 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:12:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:12:42 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%v%'
                OR
                A.content LIKE '%v%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 12:12:42 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 12:12:44 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:44 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |state |
|---------|------------|------|------|------|--------|----------|------|------|
|---------|------------|------|------|------|--------|----------|------|------|
[0;39m
[2024-06-19 12:12:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |1     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |3     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:12:49 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. UPDATE board
        SET state = 2
        WHERE board_id = 211
 {executed in 3 msec}[0;39m
[2024-06-19 12:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |2     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |3     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:12:50 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 12:12:50 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:12:51 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:12:51 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:12:55 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. UPDATE board
        SET state = 3
        WHERE board_id = 211
 {executed in 2 msec}[0;39m
[2024-06-19 12:12:56 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
24. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:56 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:12:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%보%'
                OR
                A.content LIKE '%보%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:12:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |3     |
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |3     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:14:35 [31mERROR[0;39m http-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception[0;39m
java.io.FileNotFoundException: class path resource [static/index.html] cannot be resolved to URL because it does not exist
	at org.springframework.core.io.ClassPathResource.getURL(ClassPathResource.java:230)
	at org.springframework.core.io.AbstractFileResolvingResource.lastModified(AbstractFileResolvingResource.java:268)
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:598)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-06-19 12:15:35 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT user_id
        FROM user
         WHERE id = 'greenuser2'
 {executed in 1 msec}[0;39m
[2024-06-19 12:15:35 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|124     |
|--------|
[0;39m
[2024-06-19 12:15:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT user_id
        FROM user
         WHERE id = 'greenuser3'
 {executed in 0 msec}[0;39m
[2024-06-19 12:15:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 12:15:44 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT user_id
        FROM user
         WHERE email = 'greenuser3@gmail.com'
 {executed in 0 msec}[0;39m
[2024-06-19 12:15:44 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 12:15:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'greenuser3'
 {executed in 1 msec}[0;39m
[2024-06-19 12:15:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|---|-----|----|------|
|user_id |id |name |pwd |email |
|--------|---|-----|----|------|
|--------|---|-----|----|------|
[0;39m
[2024-06-19 12:15:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. INSERT INTO user
         SET id = 'greenuser3'
        , name = '김그린'
        , pwd = '$2a$10$Bp840I9FPGQfA/iM9XXXueLMG0rvfkvJ13QvIyCGBI2KEAwj65NLW'
        , email = 'greenuser3@gmail.com'
 {executed in 2 msec}[0;39m
[2024-06-19 12:15:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
23. getGeneratedKeys on query: INSERT INTO user
         SET id = 'greenuser3'
        , name = '김그린'
        , pwd = '$2a$10$Bp840I9FPGQfA/iM9XXXueLMG0rvfkvJ13QvIyCGBI2KEAwj65NLW'
        , email = 'greenuser3@gmail.com'
 {executed in 0 msec}[0;39m
[2024-06-19 12:15:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|125       |
|----------|
[0;39m
[2024-06-19 12:16:16 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
29. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'greenuser3'
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:16 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|user_id |id         |name |pwd                                                          |email                |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|125     |greenuser3 |김그린  |$2a$10$Bp840I9FPGQfA/iM9XXXueLMG0rvfkvJ13QvIyCGBI2KEAwj65NLW |greenuser3@gmail.com |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
[0;39m
[2024-06-19 12:16:16 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
29. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 125
 {executed in 0 msec}[0;39m
[2024-06-19 12:16:16 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-----|------|------|-----------|-----------|
|calendar_id |user_id |name |title |color |created_at |updated_at |
|------------|--------|-----|------|------|-----------|-----------|
|------------|--------|-----|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
29. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 125 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 2 msec}[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 125
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
30. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 125 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------|--------|-----|------|------|-----------|-----------|
|calendar_id |user_id |name |title |color |created_at |updated_at |
|------------|--------|-----|------|------|-----------|-----------|
|------------|--------|-----|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 125
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|--------|----------|------|
|board_id |calendar_id |color |title |content |start_day |d_day |
|---------|------------|------|------|--------|----------|------|
|---------|------------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|------------|--------|-----------|-----------|
|notice_id |calendar_id |content |created_at |updated_at |
|----------|------------|--------|-----------|-----------|
|----------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
29. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 125 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
29. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 125 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
29. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 125
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
30. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 125 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|------------|--------|-----|------|------|-----------|-----------|
|calendar_id |user_id |name |title |color |created_at |updated_at |
|------------|--------|-----|------|------|-----------|-----------|
|------------|--------|-----|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
30. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 125 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:16:17 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
30. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 125 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:16:17 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:16:55 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 125
 {executed in 0 msec}[0;39m
[2024-06-19 12:16:55 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|user_id |id         |name |pwd                                                          |email                |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|125     |greenuser3 |김그린  |$2a$10$Bp840I9FPGQfA/iM9XXXueLMG0rvfkvJ13QvIyCGBI2KEAwj65NLW |greenuser3@gmail.com |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
[0;39m
[2024-06-19 12:18:48 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT user_id
        FROM user
         WHERE email = 'greenuser4@gmail.com'
 {executed in 0 msec}[0;39m
[2024-06-19 12:18:48 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|
|user_id |
|--------|
|--------|
[0;39m
[2024-06-19 12:18:50 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE user_id = 125
 {executed in 0 msec}[0;39m
[2024-06-19 12:18:50 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|user_id |id         |name |pwd                                                          |email                |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
|125     |greenuser3 |김그린  |$2a$10$Bp840I9FPGQfA/iM9XXXueLMG0rvfkvJ13QvIyCGBI2KEAwj65NLW |greenuser3@gmail.com |
|--------|-----------|-----|-------------------------------------------------------------|---------------------|
[0;39m
[2024-06-19 12:18:51 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. UPDATE user
         SET email = 'greenuser4@gmail.com' 
        WHERE user_id = 125
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:20 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'test1234'
 {executed in 0 msec}[0;39m
[2024-06-19 12:30:20 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|---------|-------|-------------------------------------------------------------|---------------|
|user_id |id       |name   |pwd                                                          |email          |
|--------|---------|-------|-------------------------------------------------------------|---------------|
|8       |test1234 |백창현 미워 |$2a$10$DPdMoBtxgr/rRJiEA6E3RO7HhdUkfzt9GbsE5nmqyV6kPhcukRMwm |test@naver.com |
|--------|---------|-------|-------------------------------------------------------------|---------------|
[0;39m
[2024-06-19 12:30:20 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:30:20 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|------------|------------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                         |created_at          |updated_at |
|----------|------------|------------------------------------------------|--------------------|-----------|
|1202      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'gogo'       |2024-06-19 11:10:11 |null       |
|1201      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1'              |2024-06-19 11:09:29 |null       |
|1200      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅎㅎㅎ'        |2024-06-19 10:58:31 |null       |
|1199      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '다시 이미지업로드'  |2024-06-19 10:56:41 |null       |
|1198      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '이미지업로드 테스트' |2024-06-19 10:54:19 |null       |
|1195      |71          |'조수현'님이 '새로만든 캘린더'에 추가되었습니다.                    |2024-06-19 10:48:14 |null       |
|----------|------------|------------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
33. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|152      |62          |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|157      |62          |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|119      |62          |#FCC419 |Volkswagen |2024-07-29 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|119      |62          |#FCC419 |Volkswagen |2024-07-29 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:30:21 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:21 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:30:33 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:33 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:30:36 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:36 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:30:38 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. UPDATE board
        SET state = 1
        WHERE board_id = 161
 {executed in 2 msec}[0;39m
[2024-06-19 12:30:39 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 2 msec}[0;39m
[2024-06-19 12:30:39 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |1     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:30:40 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. UPDATE board
        SET state = 2
        WHERE board_id = 161
 {executed in 3 msec}[0;39m
[2024-06-19 12:30:40 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
33. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:40 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |1     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:30:41 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. UPDATE board
        SET state = 2
        WHERE board_id = 157
 {executed in 2 msec}[0;39m
[2024-06-19 12:30:41 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:41 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |2     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |1     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:30:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. UPDATE board
        SET state = 2
        WHERE board_id = 152
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:43 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 8
                AND
                (A.title LIKE '%a%'
                OR
                A.content LIKE '%a%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:43 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|board_id |calendar_id |title             |color   |title      |content                                  |start_day  |d_day      |state |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |2     |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |2     |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth   |Merck Sharp & Dohme Corp.                |2023-09-18 |2024-02-24 |2     |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep       |Physicians Total Care, Inc.              |2023-12-26 |2024-05-20 |3     |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo      |Bryant Ranch Prepack                     |2022-08-08 |2024-02-28 |3     |
|119      |62          |SLR McLaren 2차 수정 |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |1     |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki     |Greenlam                                 |2024-06-28 |2024-07-09 |3     |
|40       |62          |SLR McLaren 2차 수정 |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |1     |
|28       |62          |SLR McLaren 2차 수정 |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |1     |
|---------|------------|------------------|--------|-----------|-----------------------------------------|-----------|-----------|------|
[0;39m
[2024-06-19 12:30:43 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:30:43 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title    |content                     |start_day  |d_day      |
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth |Merck Sharp & Dohme Corp.   |2023-09-18 |2024-02-24 |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep     |Physicians Total Care, Inc. |2023-12-26 |2024-05-20 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo    |Bryant Ranch Prepack        |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:31:11 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 2 msec}[0;39m
[2024-06-19 12:31:11 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title    |content                     |start_day  |d_day      |
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth |Merck Sharp & Dohme Corp.   |2023-09-18 |2024-02-24 |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep     |Physicians Total Care, Inc. |2023-12-26 |2024-05-20 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo    |Bryant Ranch Prepack        |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:32:33 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:32:33 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title    |content                     |start_day  |d_day      |
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth |Merck Sharp & Dohme Corp.   |2023-09-18 |2024-02-24 |
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep     |Physicians Total Care, Inc. |2023-12-26 |2024-05-20 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo    |Bryant Ranch Prepack        |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:33:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. UPDATE board
        SET state = 3
        WHERE board_id = 152
 {executed in 2 msec}[0;39m
[2024-06-19 12:33:06 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:33:06 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|------|----------------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title |content                     |start_day  |d_day      |
|---------|------------|------------------|--------|------|----------------------------|-----------|-----------|
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep  |Physicians Total Care, Inc. |2023-12-26 |2024-05-20 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack        |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|------|----------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:33:07 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
33. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 3
 {executed in 0 msec}[0;39m
[2024-06-19 12:33:07 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title    |content                     |start_day  |d_day      |
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
|210      |1           |title(2차 수정)      |#339AF0 |보드보드     |content                     |2024-06-12 |2024-06-18 |
|211      |1           |title(2차 수정)      |#339AF0 |보드보드     |content                     |2024-06-12 |2024-06-18 |
|113      |62          |SLR McLaren 2차 수정 |#FCC419 |Suzuki   |Greenlam                    |2024-06-28 |2024-07-09 |
|139      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo    |Bryant Ranch Prepack        |2022-08-08 |2024-02-28 |
|147      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep     |Physicians Total Care, Inc. |2023-12-26 |2024-05-20 |
|151      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo    |Bryant Ranch Prepack        |2022-08-08 |2024-02-28 |
|152      |62          |SLR McLaren 2차 수정 |#FCC419 |Plymouth |Merck Sharp & Dohme Corp.   |2023-09-18 |2024-02-24 |
|---------|------------|------------------|--------|---------|----------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:33:08 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:33:08 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|------|----------------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title |content                     |start_day  |d_day      |
|---------|------------|------------------|--------|------|----------------------------|-----------|-----------|
|157      |62          |SLR McLaren 2차 수정 |#FCC419 |Jeep  |Physicians Total Care, Inc. |2023-12-26 |2024-05-20 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack        |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|------|----------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:33:09 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. UPDATE board
        SET state = 3
        WHERE board_id = 157
 {executed in 2 msec}[0;39m
[2024-06-19 12:33:10 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 2 msec}[0;39m
[2024-06-19 12:33:10 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title |content              |start_day  |d_day      |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:33:26 [32mINFO [0;39m http-nio-8080-exec-5] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 149 ms[0;39m
[2024-06-19 12:40:34 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
33. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:40:34 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|213      |2           |#339AF0 |2번 캘린더 보드  |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:40:38 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 213
        ORDER BY comment_id
 {executed in 0 msec}[0;39m
[2024-06-19 12:40:38 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-------|-----------|------------|--------------------|-----------|
|user_id |name   |comment_id |content     |created_at          |updated_at |
|--------|-------|-----------|------------|--------------------|-----------|
|8       |백창현 미워 |78         |이거 빨리 해야해요~ |2024-06-19 10:42:43 |null       |
|8       |백창현 미워 |79         |창현이 미워하지마~  |2024-06-19 10:42:49 |null       |
|--------|-------|-----------|------------|--------------------|-----------|
[0;39m
[2024-06-19 12:40:38 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 12:40:38 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title     |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|213      |2           |8       |2번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:19 |null       |
|---------|------------|--------|----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 12:40:38 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 12:40:38 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 12:40:38 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 213
 {executed in 1 msec}[0;39m
[2024-06-19 12:40:38 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:40:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. UPDATE board
        SET state = 2
        WHERE board_id = 213
 {executed in 3 msec}[0;39m
[2024-06-19 12:40:40 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:40:40 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title     |content              |start_day  |d_day      |
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
|213      |2           |A팀 캘린더            |#339AF0 |2번 캘린더 보드 |content              |2024-06-12 |2024-06-18 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo     |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:42:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:01 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 8
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:42:01 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|------------|------------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                         |created_at          |updated_at |
|----------|------------|------------------------------------------------|--------------------|-----------|
|1202      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'gogo'       |2024-06-19 11:10:11 |null       |
|1201      |2           |'A팀 캘린더'에 새로운 일정이 등록되었습니다. : '일정1'              |2024-06-19 11:09:29 |null       |
|1200      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅎㅎㅎ'        |2024-06-19 10:58:31 |null       |
|1199      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '다시 이미지업로드'  |2024-06-19 10:56:41 |null       |
|1198      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : '이미지업로드 테스트' |2024-06-19 10:54:19 |null       |
|1195      |71          |'조수현'님이 '새로만든 캘린더'에 추가되었습니다.                    |2024-06-19 10:48:14 |null       |
|----------|------------|------------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
33. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|119      |62          |#FCC419 |Volkswagen |2024-07-29 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title     |content              |start_day  |d_day      |
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
|213      |2           |A팀 캘린더            |#339AF0 |2번 캘린더 보드 |content              |2024-06-12 |2024-06-18 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo     |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|216      |2           |#339AF0 |일정1   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|119      |62          |#FCC419 |Volkswagen |2024-07-29 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:42:02 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 8
 {executed in 0 msec}[0;39m
[2024-06-19 12:42:02 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title             |color   |created_at          |updated_at          |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정)      |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|2           |2       |asdf   |A팀 캘린더            |#339AF0 |2024-06-07 15:50:12 |2024-06-18 10:54:24 |
|62          |8       |백창현 미워 |SLR McLaren 2차 수정 |#FCC419 |2024-06-10 15:37:19 |2024-06-14 11:16:27 |
|71          |8       |백창현 미워 |새로만든 캘린더          |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|------------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:42:06 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:06 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:42:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT A.user_id AS userId, B.name AS userName, A.comment_id AS commentId, A.content, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE board_id = 214
        ORDER BY comment_id
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-----|-----------|--------|-----------|-----------|
|user_id |name |comment_id |content |created_at |updated_at |
|--------|-----|-----------|--------|-----------|-----------|
|--------|-----|-----------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:42:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT board_id AS boardId, calendar_id AS calendarId, user_id AS userId, title,
        content, state, start_day AS startDay, d_day AS dDay, dead_line AS deadLine, created_at AS createdAt, updated_at AS updatedAt
        FROM board
        WHERE board_id = 214
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|board_id |calendar_id |user_id |title      |content |state |start_day  |d_day      |dead_line |created_at          |updated_at |
|---------|------------|--------|-----------|--------|------|-----------|-----------|----------|--------------------|-----------|
|214      |62          |8       |62번 캘린더 보드 |content |1     |2024-06-12 |2024-06-18 |12:30:00  |2024-06-18 14:26:25 |null       |
|---------|------------|--------|-----------|--------|------|-----------|-----------|----------|--------------------|-----------|
[0;39m
[2024-06-19 12:42:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT file_id AS fileId, file_name AS fileName
        FROM file
        WHERE board_id = 214
 {executed in 0 msec}[0;39m
[2024-06-19 12:42:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|
|file_id |file_name |
|--------|----------|
|--------|----------|
[0;39m
[2024-06-19 12:42:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT
        T.tag_id AS tagId,
        T.calendar_id AS calendarId,
        T.title,
        T.color,
        T.created_at AS createdAt,
        T.updated_at AS updatedAt
        FROM tag T
        JOIN board_tag BT ON T.tag_id = BT.tag_id
        WHERE
        BT.board_id = 214
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-------|------------|------|------|-----------|-----------|
|tag_id |calendar_id |title |color |created_at |updated_at |
|-------|------------|------|------|-----------|-----------|
|-------|------------|------|------|-----------|-----------|
[0;39m
[2024-06-19 12:42:15 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:15 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                                     |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:42:19 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
33. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:42:19 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title     |content              |start_day  |d_day      |
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
|213      |2           |A팀 캘린더            |#339AF0 |2번 캘린더 보드 |content              |2024-06-12 |2024-06-18 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo     |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 12:51:47 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT user_id AS userId, id, name, pwd, email
        FROM user
        WHERE id = 'mybirth811'
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:47 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|user_id |id         |name |pwd                                                          |email           |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
|72      |mybirth811 |조수현  |$2a$10$uMPvJawyp8XmaTVyHrBW..TqaQ1P5oPrhpeNrvEj7j/ObnO4gT3sK |tngus@naver.com |
|--------|-----------|-----|-------------------------------------------------------------|----------------|
[0;39m
[2024-06-19 12:51:47 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 0 msec}[0;39m
[2024-06-19 12:51:47 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT A.notice_id AS noticeId, A.calendar_id AS calendarId
            , A.content, A.created_at AS createdAt, B.updated_at AS updatedAt
        FROM notice A
        JOIN notice_list B
        ON A.notice_id = B.notice_id
        WHERE B.user_id = 72
            AND B.updated_at IS NULL
        ORDER BY A.notice_id DESC
        LIMIT 6
 {executed in 0 msec}[0;39m
[2024-06-19 12:51:47 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:51:47 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------|------------|-------------------------------------------|--------------------|-----------|
|notice_id |calendar_id |content                                    |created_at          |updated_at |
|----------|------------|-------------------------------------------|--------------------|-----------|
|1197      |1           |'title(2차 수정)'에 새로운 일정이 등록되었습니다. : 'ㅁㄹㄴㅇ'  |2024-06-19 10:50:33 |null       |
|1196      |71          |'새로만든 캘린더' 캘린더가 추가되었습니다.                   |2024-06-19 10:48:14 |null       |
|1194      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '창현이 미워하지마~'  |2024-06-19 10:42:49 |null       |
|1193      |1           |'2번 캘린더 보드'에 새로운 댓글이 있습니다. : '이거 빨리 해야해요~' |2024-06-19 10:42:43 |null       |
|1191      |70          |'김밥천국'님이 '캘린더 생성'에 추가되었습니다.                |2024-06-19 09:35:40 |null       |
|----------|------------|-------------------------------------------|--------------------|-----------|
[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |ㅁㅇㄹㄴ                      |2024-06-20 |2024-06-21 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) = CURDATE()
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|------|-----------|
|board_id |calendar_id |color   |title |d_day      |
|---------|------------|--------|------|-----------|
|207      |1           |#339AF0 |테스트   |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ  |2024-06-19 |
|---------|------------|--------|------|-----------|
[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > CURDATE()
          AND DATE(A.d_day) <= LAST_DAY(CURDATE())
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------|
|board_id |calendar_id |color   |title      |d_day      |
|---------|------------|--------|-----------|-----------|
|233      |1           |#339AF0 |gogo       |2024-06-21 |
|223      |1           |#339AF0 |ㅁㄹㄴㅇ       |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |2024-06-28 |
|---------|------------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color,
            A.title,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
          AND DATE(A.d_day) > LAST_DAY(CURDATE())
          AND DATE(A.d_day) <= LAST_DAY(DATE_ADD(CURDATE(), INTERVAL 1 MONTH))
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|
|board_id |calendar_id |color |title |d_day |
|---------|------------|------|------|------|
|---------|------------|------|------|------|
[0;39m
[2024-06-19 12:51:48 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT  A.calendar_id AS calendarId, A.user_id AS userId, C.name AS name, A.title, A.color, A.created_at AS createdAt, A.updated_at AS updatedAt
        FROM calendar A
        JOIN calendar_user B ON A.calendar_id = B.calendar_id
        JOIN user C ON A.user_id = C.user_id
        WHERE B.user_id = 72
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:48 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|calendar_id |user_id |name   |title        |color   |created_at          |updated_at          |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
|1           |1       |백창현    |title(2차 수정) |#339AF0 |2024-06-07 15:49:59 |2024-06-18 15:58:01 |
|68          |72      |조수현    |캘린더 C        |#F06595 |2024-06-18 13:17:09 |null                |
|69          |72      |조수현    |캘린더 D        |#845EF7 |2024-06-18 13:18:50 |null                |
|70          |72      |조수현    |캘린더 생성       |#51CF66 |2024-06-18 15:27:46 |null                |
|71          |8       |백창현 미워 |새로만든 캘린더     |#845EF7 |2024-06-18 19:43:50 |null                |
|------------|--------|-------|-------------|--------|--------------------|--------------------|
[0;39m
[2024-06-19 12:51:49 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:51:49 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:51:52 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 0 msec}[0;39m
[2024-06-19 12:51:52 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |1     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:51:54 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 2
        WHERE board_id = 223
 {executed in 2 msec}[0;39m
[2024-06-19 12:51:54 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT DISTINCT
        A.board_id AS boardId,
        B.calendar_id AS calendarId,
        B.title AS calendarName,
        B.color,
        A.title,
        A.content,
        A.start_day AS startDay,
        A.d_day AS dDay,
        A.state
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
         WHERE C.user_id = 72
                AND
                (A.title LIKE '%ㅁ%'
                OR
                A.content LIKE '%ㅁ%') 
        ORDER BY A.board_id DESC
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:54 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |state |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |2     |
|215      |1           |title(2차 수정) |#339AF0 |ㅁㄴㅇㄹ  |ㅁㅇㄻㄴㄹ   |2024-06-18 |2024-06-19 |1     |
|207      |1           |title(2차 수정) |#339AF0 |테스트   |ㅇㄴㄹㄴㅁㄹㅇ |2024-06-18 |2024-06-19 |1     |
|---------|------------|-------------|--------|------|--------|-----------|-----------|------|
[0;39m
[2024-06-19 12:51:55 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:51:55 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:52:12 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:52:12 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:52:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. UPDATE board
        SET state = 3
        WHERE board_id = 223
 {executed in 1 msec}[0;39m
[2024-06-19 12:52:13 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:52:13 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:52:17 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 12:52:17 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:52:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 2
        WHERE board_id = 210
 {executed in 2 msec}[0;39m
[2024-06-19 12:52:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 2
        WHERE board_id = 211
 {executed in 1 msec}[0;39m
[2024-06-19 12:52:20 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 2
        WHERE board_id = 223
 {executed in 1 msec}[0;39m
[2024-06-19 12:52:20 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 12:52:20 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:52:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 2 msec}[0;39m
[2024-06-19 12:52:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:52:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 3
        WHERE board_id = 210
 {executed in 3 msec}[0;39m
[2024-06-19 12:52:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 3
        WHERE board_id = 211
 {executed in 3 msec}[0;39m
[2024-06-19 12:52:24 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:52:24 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:52:26 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 12:52:26 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:03 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:54:03 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:04 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 0 msec}[0;39m
[2024-06-19 12:54:04 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:06 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 2
        WHERE board_id = 210
 {executed in 3 msec}[0;39m
[2024-06-19 12:54:06 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 2
        WHERE board_id = 211
 {executed in 2 msec}[0;39m
[2024-06-19 12:54:07 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 12:54:07 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|------|------|------|--------|----------|------|
|board_id |calendar_id |title |color |title |content |start_day |d_day |
|---------|------------|------|------|------|--------|----------|------|
|---------|------------|------|------|------|--------|----------|------|
[0;39m
[2024-06-19 12:54:07 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 12:54:07 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:10 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 3
        WHERE board_id = 210
 {executed in 2 msec}[0;39m
[2024-06-19 12:54:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:54:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:11 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 12:54:11 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:12 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:54:12 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:13 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. UPDATE board
        SET state = 3
        WHERE board_id = 211
 {executed in 2 msec}[0;39m
[2024-06-19 12:54:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 12:54:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
42. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 3
 {executed in 1 msec}[0;39m
[2024-06-19 12:54:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|210      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|211      |1           |title(2차 수정) |#339AF0 |보드보드  |content |2024-06-12 |2024-06-18 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 12:54:16 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 12:54:16 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                   |start_day  |d_day      |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
|10       |1           |#339AF0 |title      |content                   |2024-04-11 |2024-04-12 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                       |2024-06-14 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                   |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                     |2024-06-18 |2024-06-19 |
|233      |1           |#339AF0 |gogo       |gogogogo                  |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                 |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다. |2024-06-20 |2024-06-28 |
|---------|------------|--------|-----------|--------------------------|-----------|-----------|
[0;39m
[2024-06-19 15:52:37 [32mINFO [0;39m http-nio-8080-exec-4] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 150 ms[0;39m
[2024-06-19 15:52:52 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 15:52:52 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 15:52:53 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 15:52:53 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 15:56:48 [32mINFO [0;39m http-nio-8080-exec-1] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 135 ms[0;39m
[2024-06-19 15:58:02 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 72 AND A.state = 2
 {executed in 0 msec}[0;39m
[2024-06-19 15:58:02 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|board_id |calendar_id |title        |color   |title |content |start_day  |d_day      |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
|223      |1           |title(2차 수정) |#339AF0 |ㅁㄹㄴㅇ  |ㅁㅇㄹㄴ    |2024-06-20 |2024-06-21 |
|---------|------------|-------------|--------|------|--------|-----------|-----------|
[0;39m
[2024-06-19 16:01:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.title AS calendarName,
            B.color,
            A.title,
            A.content,
            A.start_day AS startDay,
            A.d_day AS dDay
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 2
 {executed in 1 msec}[0;39m
[2024-06-19 16:01:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
|board_id |calendar_id |title             |color   |title     |content              |start_day  |d_day      |
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
|223      |1           |title(2차 수정)      |#339AF0 |ㅁㄹㄴㅇ      |ㅁㅇㄹㄴ                 |2024-06-20 |2024-06-21 |
|213      |2           |A팀 캘린더            |#339AF0 |2번 캘린더 보드 |content              |2024-06-12 |2024-06-18 |
|161      |62          |SLR McLaren 2차 수정 |#FCC419 |Volvo     |Bryant Ranch Prepack |2022-08-08 |2024-02-28 |
|---------|------------|------------------|--------|----------|---------------------|-----------|-----------|
[0;39m
[2024-06-19 16:50:14 [32mINFO [0;39m http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 148 ms[0;39m
[2024-06-19 16:56:00 [32mINFO [0;39m http-nio-8080-exec-2] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 140 ms[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m Thread-7] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m Thread-7] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m Thread-7] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown initiated...[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m Thread-7] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Shutdown completed.[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 11632 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 17:00:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 384 ms[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Starting...[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3c00add0[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Start completed.[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 17:00:43 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
131. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:00:43 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 1.093 seconds (process running for 21081.304)[0;39m
[2024-06-19 17:00:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m Thread-11] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m Thread-11] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m Thread-11] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Shutdown initiated...[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m Thread-11] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-3 - Shutdown completed.[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 11632 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 393 ms[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-4 - Starting...[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-4 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5efc10e2[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-4 - Start completed.[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 17:00:45 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
141. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 17:00:45 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:00:45 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 17:00:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 17:00:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 17:00:46 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:00:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 17:00:46 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 1.037 seconds (process running for 21083.779)[0;39m
[2024-06-19 17:00:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m Thread-15] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m Thread-15] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m Thread-15] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-4 - Shutdown initiated...[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m Thread-15] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-4 - Shutdown completed.[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 11632 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 330 ms[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-5 - Starting...[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-5 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@29372c2b[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-5 - Start completed.[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 17:04:26 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
151. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 17:04:26 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:04:26 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 17:04:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 17:04:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 17:04:27 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 17:04:27 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 0.9 seconds (process running for 21304.949)[0;39m
[2024-06-19 17:04:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m Thread-19] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m Thread-19] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m Thread-19] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-5 - Shutdown initiated...[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m Thread-19] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-5 - Shutdown completed.[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 11632 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 331 ms[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-6 - Starting...[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-6 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@152695f3[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-6 - Start completed.[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 17:04:40 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
161. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 17:04:40 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:04:41 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 17:04:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 17:04:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 17:04:41 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 17:04:41 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 0.89 seconds (process running for 21318.988)[0;39m
[2024-06-19 17:04:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 17:04:47 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m
[2024-06-19 17:04:47 [32mINFO [0;39m Thread-23] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:47 [32mINFO [0;39m Thread-23] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:04:47 [32mINFO [0;39m Thread-23] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-6 - Shutdown initiated...[0;39m
[2024-06-19 17:04:47 [32mINFO [0;39m Thread-23] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-6 - Shutdown completed.[0;39m
[2024-06-19 17:04:47 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 11632 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 17:04:47 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 325 ms[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-7 - Starting...[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-7 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@61c7fc9e[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-7 - Start completed.[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 17:04:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
171. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:04:48 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 0.876 seconds (process running for 21326.415)[0;39m
[2024-06-19 17:04:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m Thread-27] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m Thread-27] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m Thread-27] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-7 - Shutdown initiated...[0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m Thread-27] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-7 - Shutdown completed.[0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 11632 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 17:05:47 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 428 ms[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-8 - Starting...[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-8 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@295148ce[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-8 - Start completed.[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 17:05:48 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
181. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:05:48 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 1.145 seconds (process running for 21386.403)[0;39m
[2024-06-19 17:05:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 17:07:25 [32mINFO [0;39m SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:07:25 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-8 - Shutdown initiated...[0;39m
[2024-06-19 17:07:25 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-8 - Shutdown completed.[0;39m
[2024-06-19 17:07:27 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 18700 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 17:07:27 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 17:07:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-06-19 17:07:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-06-19 17:07:28 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 17:07:28 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 8 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1567 ms[0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@230ae4f6[0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.hibernate.Version] [36mHHH000412: Hibernate ORM core version 6.4.4.Final[0;39m
[2024-06-19 17:07:29 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 17:07:30 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 17:07:30 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-06-19 17:07:30 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 17:07:30 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:07:30 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 17:07:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 17:07:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 17:07:31 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:07:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 17:07:31 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 3.898 seconds (process running for 4.326)[0;39m
[2024-06-19 17:07:31 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-06-19 17:07:31 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-06-19 17:07:31 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-06-19 17:07:32 [32mINFO [0;39m http-nio-8080-exec-4] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 381 ms[0;39m
[2024-06-19 17:07:37 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 1 msec}[0;39m
[2024-06-19 17:07:37 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 17:08:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 17:08:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 17:08:48 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 17:08:48 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-25 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 17:08:56 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
            A.board_id AS boardId,
            B.calendar_id AS calendarId,
            B.color AS backgroundColor,
            A.title,
            A.content,
            A.start_day AS start,
            A.d_day AS end
        FROM board A
        JOIN calendar B ON A.calendar_id = B.calendar_id
        JOIN calendar_user C ON B.calendar_id = C.calendar_id
        WHERE C.user_id = 8 AND A.state = 1
        ORDER BY A.d_day ASC
 {executed in 0 msec}[0;39m
[2024-06-19 17:08:56 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|board_id |calendar_id |color   |title      |content                                  |start_day  |d_day      |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
|40       |62          |#FCC419 |Geo        |BioDelivery Sciences International, Inc. |2022-04-28 |2024-01-31 |
|28       |62          |#FCC419 |Kia        |Teva Parenteral Medicines, Inc.          |2023-08-19 |2024-03-25 |
|10       |1           |#339AF0 |title      |content                                  |2024-04-11 |2024-04-12 |
|214      |62          |#FCC419 |62번 캘린더 보드 |content                                  |2024-06-12 |2024-06-18 |
|217      |2           |#339AF0 |일정2        |content                                  |2024-06-12 |2024-06-18 |
|226      |1           |#339AF0 |ㅎㅎㅎ        |ㅎㅎㅎ                                      |2024-06-14 |2024-06-18 |
|218      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|222      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|232      |2           |#339AF0 |일정1        |content                                  |2024-06-12 |2024-06-18 |
|207      |1           |#339AF0 |테스트        |ㅇㄴㄹㄴㅁㄹㅇ                                  |2024-06-18 |2024-06-19 |
|215      |1           |#339AF0 |ㅁㄴㅇㄹ       |ㅁㅇㄻㄴㄹ                                    |2024-06-18 |2024-06-19 |
|216      |2           |#339AF0 |일정1        |일정입니다                                    |2024-06-18 |2024-06-19 |
|233      |1           |#339AF0 |gogo       |gogogogo                                 |2024-06-19 |2024-06-21 |
|225      |1           |#339AF0 |다시 이미지업로드  |다시 이미지업로드                                |2024-06-20 |2024-06-27 |
|224      |1           |#339AF0 |이미지업로드 테스트 |여기에서 이미지 일반 업로드를 테스트 합니다.                |2024-06-20 |2024-06-28 |
|119      |62          |#FCC419 |Volkswagen |Voltsillam                               |2024-06-13 |2024-07-29 |
|---------|------------|--------|-----------|-----------------------------------------|-----------|-----------|
[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m Thread-5] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarting TodoApplication using Java 17.0.10 with PID 18700 (D:\youp\backEnd\todo\build\classes\java\main started by Administrator in D:\youp\backEnd\todo)[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [36mFinished Spring Data repository scanning in 3 ms. Found 0 JPA repository interfaces.[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-06-19 17:09:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 383 ms[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Starting...[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@580f6fde[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-2 - Start completed.[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.hibernate.jpa.internal.util.LogHelper] [36mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.hibernate.cache.internal.RegionFactoryInitiator] [36mHHH000026: Second-level cache disabled[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] [36mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m
[2024-06-19 17:09:33 [32mDEBUG[0;39m restartedMain] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [36mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] [36mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m
[2024-06-19 17:09:33 [33mWARN [0;39m restartedMain] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [36mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [com.green.todo.TodoApplication] [36mStarted TodoApplication in 1.041 seconds (process running for 126.587)[0;39m
[2024-06-19 17:09:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-06-19 17:10:09 INFO  Test worker] [com.green.todo.TodoApplicationTests] Starting TodoApplicationTests using Java 17.0.10 with PID 18332 (started by Administrator in D:\youp\backEnd\todo)
[2024-06-19 17:10:09 INFO  Test worker] [com.green.todo.TodoApplicationTests] No active profile set, falling back to 1 default profile: "default"
[2024-06-19 17:10:10 INFO  Test worker] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2024-06-19 17:10:10 INFO  Test worker] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 8 ms. Found 0 JPA repository interfaces.
[2024-06-19 17:10:10 INFO  Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-06-19 17:10:10 INFO  Test worker] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@579f3c8e
[2024-06-19 17:10:10 INFO  Test worker] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-06-19 17:10:10 INFO  Test worker] [org.hibernate.jpa.internal.util.LogHelper] HHH000204: Processing PersistenceUnitInfo [name: default]
[2024-06-19 17:10:10 INFO  Test worker] [org.hibernate.Version] HHH000412: Hibernate ORM core version 6.4.4.Final
[2024-06-19 17:10:10 INFO  Test worker] [org.hibernate.cache.internal.RegionFactoryInitiator] HHH000026: Second-level cache disabled
[2024-06-19 17:10:10 INFO  Test worker] [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo] No LoadTimeWeaver setup: ignoring JPA class transformer
[2024-06-19 17:10:10 DEBUG Test worker] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}
[2024-06-19 17:10:11 INFO  Test worker] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[2024-06-19 17:10:11 INFO  Test worker] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2024-06-19 17:10:11 WARN  Test worker] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2024-06-19 17:10:12 INFO  Test worker] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] Exposing 1 endpoint(s) beneath base path '/actuator'
[2024-06-19 17:10:12 INFO  Test worker] [com.green.todo.TodoApplicationTests] Started TodoApplicationTests in 3.57 seconds (process running for 4.42)
[2024-06-19 17:10:13 INFO  SpringApplicationShutdownHook] [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] Closing JPA EntityManagerFactory for persistence unit 'default'
[2024-06-19 17:10:13 INFO  SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-06-19 17:10:13 INFO  SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
